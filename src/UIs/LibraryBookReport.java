package UIs;

import Classes.LibraryBookModel;
import Classes.ProjectDesign;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

public class LibraryBookReport extends javax.swing.JFrame {

    ProjectDesign pD;
    DefaultTableModel searchTableModel;
    
    public LibraryBookReport() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTF_BookId = new javax.swing.JTextField();
        jTF_BorrowId = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_LibraryData = new javax.swing.JTable();
        jB_ReportGenerate = new javax.swing.JButton();
        jB_Reload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/School Logo Small.png"))); // NOI18N

        jTF_BookId.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jTF_BookId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_BookId.setText("Book Id");
        jTF_BookId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTF_BookIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_BookIdFocusLost(evt);
            }
        });
        jTF_BookId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_BookIdActionPerformed(evt);
            }
        });

        jTF_BorrowId.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jTF_BorrowId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_BorrowId.setText("Borrow Id");
        jTF_BorrowId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTF_BorrowIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_BorrowIdFocusLost(evt);
            }
        });
        jTF_BorrowId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_BorrowIdActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText(" L I B R A R Y    R E P O R T ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jT_LibraryData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Id", "Borrow Id", "Title Name", "Author Name", "Edition", "Entry Date", "Borrow Date", "Return Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jT_LibraryData);

        jB_ReportGenerate.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jB_ReportGenerate.setText("Report Generate");

        jB_Reload.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jB_Reload.setText("reload");
        jB_Reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_ReloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205)
                        .addComponent(jB_Reload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTF_BookId, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTF_BorrowId, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jB_ReportGenerate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jB_Reload)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_BorrowId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_BookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jB_ReportGenerate)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTF_BookIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_BookIdFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jTF_BookId;
        pD.placeHolder("jTextField", "FG", "Book Id");
    }//GEN-LAST:event_jTF_BookIdFocusGained

    private void jTF_BookIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_BookIdFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jTF_BookId;
        pD.placeHolder("jTextField", "FL", "Book Id");
    }//GEN-LAST:event_jTF_BookIdFocusLost

    private void jTF_BookIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_BookIdActionPerformed
        GetBookList();
    }//GEN-LAST:event_jTF_BookIdActionPerformed
    
    private void GetBookList() {
        String bookId = "", bookTitle= "", authorName= "", entryDate= "", bookEdition= "";
        try {
            String sqlForBookData = "SELECT * FROM BOOKDATASET WHERE BOKID = ?";
            LibraryBookModel bookModel = new LibraryBookModel();
            bookModel.SearchId = jTF_BookId.getText().toUpperCase();
            String feedBack = bookModel.SearchBookDetails(sqlForBookData, "For Book List");
            if ("All Retrive".equals(feedBack)) {
                 bookId = bookModel.Id;
                 bookTitle = bookModel.Name;
                 authorName = bookModel.Author;
                 entryDate = bookModel.EntryDate;
                 bookEdition = bookModel.Edition;
            }

            String sqlForBorrowData = "SELECT * FROM BOOKBORROWINFO WHERE BRWBOKID = ?";
            bookModel.SearchId = jTF_BookId.getText().toUpperCase();
            feedBack = bookModel.SearchBorrowDetails(sqlForBorrowData);

            searchTableModel = (DefaultTableModel) jT_LibraryData.getModel();
            searchTableModel.setRowCount(0);
            for (int i = 0; i < bookModel.CountSearchQuery("SELECT COUNT(*) FROM BOOKBORROWINFO WHERE BRWBOKID = ?"); i++) {
                searchTableModel.addRow(new Object[]{bookId, bookModel.BrwId[i], bookTitle, authorName, bookEdition, entryDate,
                    bookModel.BrwDate[i], bookModel.SubDate[i]});
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibraryBookReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void GetBorrowList() {
        String borrowId = "", borrowDate = "", submitDate = "";
        try {
            String sqlForBorrowData = "SELECT * FROM BOOKBORROWINFO WHERE BRWID = ?";
            LibraryBookModel bookModel = new LibraryBookModel();
            bookModel.SearchId = jTF_BorrowId.getText().toUpperCase();
            String feedBack = bookModel.SearchBorrowDetails(sqlForBorrowData);
            if ("All Retrive".equals(feedBack)) {
                borrowId = bookModel.Id;
                borrowDate = bookModel.BorrowDate;
                submitDate = bookModel.SubmitDate;
            }
            
            String sqlForBookData = "SELECT * FROM BOOKDATASET WHERE BOKID = ?";
            bookModel.SearchId = bookModel.BId;
            bookModel.SearchBookDetails(sqlForBookData, "For Borrow List");
            
            searchTableModel = (DefaultTableModel) jT_LibraryData.getModel();
            searchTableModel.setRowCount(0);
            for (int i = 0; i < bookModel.CountSearchQuery("SELECT COUNT(*) FROM BOOKBORROWINFO WHERE BRWBOKID = ?"); i++) {
                searchTableModel.addRow(new Object[]{bookModel.BookId[i], borrowId, bookModel.BookTitle[i], bookModel.AuthorName[i],
                    bookModel.BookEdition[i], bookModel.AccessDate[i], borrowDate, submitDate});
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibraryBookReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jTF_BorrowIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_BorrowIdFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jTF_BorrowId;
        pD.placeHolder("jTextField", "FG", "Borrow Id");
    }//GEN-LAST:event_jTF_BorrowIdFocusGained

    private void jTF_BorrowIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_BorrowIdFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jTF_BorrowId;
        pD.placeHolder("jTextField", "FL", "Borrow Id");
    }//GEN-LAST:event_jTF_BorrowIdFocusLost

    private void jTF_BorrowIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_BorrowIdActionPerformed
        GetBorrowList();
    }//GEN-LAST:event_jTF_BorrowIdActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void jB_ReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_ReloadActionPerformed
        pD = new ProjectDesign();
        pD.phTextField = jTF_BookId;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Book Id");
        pD.phTextField = jTF_BorrowId;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Borrow Id");
    }//GEN-LAST:event_jB_ReloadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryBookReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryBookReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryBookReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryBookReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LibraryBookReport().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Reload;
    private javax.swing.JButton jB_ReportGenerate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTF_BookId;
    private javax.swing.JTextField jTF_BorrowId;
    private javax.swing.JTable jT_LibraryData;
    // End of variables declaration//GEN-END:variables
}

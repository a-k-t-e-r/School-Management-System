package UIs;

import Classes.AutomaticIdGenerator;
import Classes.EmployeeModel;
import Classes.ImageModel;
import Classes.ProjectDesign;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class ProfileEmployeeAdd extends javax.swing.JFrame {
    ProjectDesign pD;
    AutomaticIdGenerator autoId;
    EmployeeModel profileModel;
    ImageModel imageModel = new ImageModel();

    public ProfileEmployeeAdd() throws SQLException {
        initComponents();
        this.autoId = new AutomaticIdGenerator();
        jTF_EmployeeId.setText("EMP-" + (autoId.IdGenerator("ProfileEmployeeAdd")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFundaInfo = new javax.swing.JPanel();
        jT_emergencyContactNo = new javax.swing.JTextField();
        jC_Position = new javax.swing.JComboBox<>();
        jTF_EmployeeId = new javax.swing.JTextField();
        jL_employeePhoto = new javax.swing.JLabel();
        scrlPAddr1 = new javax.swing.JScrollPane();
        jTA_temporaryAddr = new javax.swing.JTextArea();
        scrlPAddr = new javax.swing.JScrollPane();
        jTA_parmanentAddr = new javax.swing.JTextArea();
        jLblDoB = new javax.swing.JLabel();
        jC_religion = new javax.swing.JComboBox<>();
        jT_contactNo = new javax.swing.JTextField();
        scrlEduQua = new javax.swing.JScrollPane();
        jTA_eduQualification = new javax.swing.JTextArea();
        jTF_EmployeeName = new javax.swing.JTextField();
        jC_nationality = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        scrlOtherQua = new javax.swing.JScrollPane();
        jTA_otherQualification = new javax.swing.JTextArea();
        jP_dateOfBirth = new javax.swing.JPanel();
        jDC_DateOfBirth = new com.toedter.calendar.JDateChooser();
        jC_bloodType = new javax.swing.JComboBox<>();
        jL_schoolLogo = new javax.swing.JLabel();
        jL_gender = new javax.swing.JLabel();
        jCB_genderMale = new javax.swing.JCheckBox();
        jCB_genderFemale = new javax.swing.JCheckBox();
        jCB_AddressSame = new javax.swing.JCheckBox();
        jPanelControls = new javax.swing.JPanel();
        jB_update = new javax.swing.JButton();
        jB_save = new javax.swing.JButton();
        jB_refresh = new javax.swing.JButton();
        jB_delete = new javax.swing.JButton();
        jPanelSearchBox = new javax.swing.JPanel();
        jT_searchBox = new javax.swing.JTextField();
        jB_searching = new javax.swing.JButton();
        jL_status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelFundaInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Fundamental Information"));
        jPanelFundaInfo.setForeground(new java.awt.Color(255, 255, 0));

        jT_emergencyContactNo.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_emergencyContactNo.setText("Emergency Contact No");
        jT_emergencyContactNo.setToolTipText("Id/Roll will generate automatically");
        jT_emergencyContactNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jT_emergencyContactNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jT_emergencyContactNoFocusLost(evt);
            }
        });

        jC_Position.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_Position.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select position>", "Administrator", "Admissions Assistant", "Admissions Representative", "Accounts Head", "Financial Aid Administrator", "Librarian", "Librarian Assistant", "Food Service Aide", "Food Service Coordinator", "Food Service Manager", "Bus Driver", "Worker" }));
        jC_Position.setToolTipText("Select class for the student");
        jC_Position.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jC_PositionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jC_PositionFocusLost(evt);
            }
        });

        jTF_EmployeeId.setEditable(false);
        jTF_EmployeeId.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTF_EmployeeId.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTF_EmployeeId.setText("Employee Id");
        jTF_EmployeeId.setToolTipText("Id/Roll will generate automatically");

        jL_employeePhoto.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_employeePhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_employeePhoto.setText("<html><body><p style=\"text-align:center;\">Employee<br\\>Photo</p></body></html>");
        jL_employeePhoto.setToolTipText("Select a formal photo");
        jL_employeePhoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jL_employeePhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jL_employeePhotoMouseClicked(evt);
            }
        });

        jTA_temporaryAddr.setColumns(20);
        jTA_temporaryAddr.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_temporaryAddr.setRows(5);
        jTA_temporaryAddr.setText("Temporary Address");
        jTA_temporaryAddr.setToolTipText("Parmanent Address");
        jTA_temporaryAddr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTA_temporaryAddrFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTA_temporaryAddrFocusLost(evt);
            }
        });
        scrlPAddr1.setViewportView(jTA_temporaryAddr);

        jTA_parmanentAddr.setColumns(20);
        jTA_parmanentAddr.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_parmanentAddr.setRows(5);
        jTA_parmanentAddr.setText("Parmanent Address");
        jTA_parmanentAddr.setToolTipText("Parmanent Address");
        jTA_parmanentAddr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTA_parmanentAddrFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTA_parmanentAddrFocusLost(evt);
            }
        });
        scrlPAddr.setViewportView(jTA_parmanentAddr);

        jLblDoB.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jLblDoB.setText("Date of Birth");

        jC_religion.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_religion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select religion>", "Islam", "Christianity", "Hinduism", "Buddhism", "Nonreligious", "Chinese traditional religion", "Primal-indigenous", "African traditional and Diasporic", "Sikhism", "Juche", "Spiritism", "Judaism", "Bahai", "Jainism", "Shinto", "Cao Dai", "Zoroastrianism", "Tenrikyo", "Neo-Paganism", "Unitarian-Universalism" }));
        jC_religion.setToolTipText("Religion");
        jC_religion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jC_religionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jC_religionFocusLost(evt);
            }
        });

        jT_contactNo.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_contactNo.setText("Contact No");
        jT_contactNo.setToolTipText("Id/Roll will generate automatically");
        jT_contactNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jT_contactNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jT_contactNoFocusLost(evt);
            }
        });

        jTA_eduQualification.setColumns(20);
        jTA_eduQualification.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_eduQualification.setRows(5);
        jTA_eduQualification.setText("Educational Qualification");
        jTA_eduQualification.setToolTipText("Parmanent Address");
        jTA_eduQualification.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTA_eduQualificationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTA_eduQualificationFocusLost(evt);
            }
        });
        scrlEduQua.setViewportView(jTA_eduQualification);

        jTF_EmployeeName.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTF_EmployeeName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTF_EmployeeName.setText("Employee Name");
        jTF_EmployeeName.setToolTipText("Enter Name of the Employee");
        jTF_EmployeeName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTF_EmployeeNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_EmployeeNameFocusLost(evt);
            }
        });

        jC_nationality.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_nationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select nationality>", "Afghan", "Albanian", "Algerian", "American", "Andorran", "Angolan", "Antiguans", "Argentinean", "Armenian", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Barbudans", "Batswana", "Belarusian", "Belgian", "Belizean", "Beninese", "Bhutanese", "Bolivian", "Bosnian", "Brazilian", "British", "Bruneian", "Bulgarian", "Burkinabe", "Burmese", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Cape Verdean", "Central African", "Chadian", "Chilean", "Chinese", "Colombian", "Comoran", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Danish", "Djibouti", "Dominican", "Dutch", "East Timorese", "Ecuadorean", "Egyptian", "Emirian", "Equatorial Guinean", "Eritrean", "Estonian", "Ethiopian", "Fijian", "Filipino", "Finnish", "French", "Gabonese", "Gambian", "Georgian", "German", "Ghanaian", "Greek", "Grenadian", "Guatemalan", "Guinea-Bissauan", "Guinean", "Guyanese", "Haitian", "Herzegovinian", "Honduran", "Hungarian", "I-Kiribati", "Icelander", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivorian", "Jamaican", "Japanese", "Jordanian", "Kazakhstani", "Kenyan", "Kittian and Nevisian", "Kuwaiti", "Kyrgyz", "Laotian", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourger", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivian", "Malian", "Maltese", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovan", "Monacan", "Mongolian", "Moroccan", "Mosotho", "Motswana", "Mozambican", "Namibian", "Nauruan", "Nepalese", "New Zealander", "Ni-Vanuatu", "Nicaraguan", "Nigerian", "Nigerien", "North Korean", "Northern Irish", "Norwegian", "Omani", "Pakistani", "Palauan", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Polish", "Portuguese", "Qatari", "Romanian", "Russian", "Rwandan", "Saint Lucian", "Salvadoran", "Samoan", "San Marinese", "Sao Tomean", "Saudi", "Scottish", "Senegalese", "Serbian", "Seychellois", "Sierra Leonean", "Singaporean", "Slovakian", "Slovenian", "Solomon Islander", "Somali", "South African", "South Korean", "Spanish", "Sri Lankan", "Sudanese", "Surinamer", "Swazi", "Swedish", "Swiss", "Syrian", "Taiwanese", "Tajik", "Tanzanian", "Thai", "Togolese", "Tongan", "Trinidadian or Tobagonian", "Tunisian", "Turkish", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbekistani", "Venezuelan", "Vietnamese", "Welsh", "Yemenite", "Zambian", "Zimbabwean" }));
        jC_nationality.setToolTipText("Nationality");
        jC_nationality.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jC_nationalityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jC_nationalityFocusLost(evt);
            }
        });

        jSeparator1.setForeground(java.awt.Color.red);
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTA_otherQualification.setColumns(20);
        jTA_otherQualification.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_otherQualification.setRows(5);
        jTA_otherQualification.setText("Other Qualification");
        jTA_otherQualification.setToolTipText("Parmanent Address");
        jTA_otherQualification.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTA_otherQualificationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTA_otherQualificationFocusLost(evt);
            }
        });
        scrlOtherQua.setViewportView(jTA_otherQualification);

        jP_dateOfBirth.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jDC_DateOfBirth.setToolTipText("Date of Birth");
        jDC_DateOfBirth.setAutoscrolls(true);
        jDC_DateOfBirth.setDateFormatString("yyyy-MM-dd");
        jDC_DateOfBirth.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N

        javax.swing.GroupLayout jP_dateOfBirthLayout = new javax.swing.GroupLayout(jP_dateOfBirth);
        jP_dateOfBirth.setLayout(jP_dateOfBirthLayout);
        jP_dateOfBirthLayout.setHorizontalGroup(
            jP_dateOfBirthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_dateOfBirthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDC_DateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jP_dateOfBirthLayout.setVerticalGroup(
            jP_dateOfBirthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_dateOfBirthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDC_DateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jC_bloodType.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_bloodType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select blood type>", "O−", "O+", "A−", "A+", "B−", "B+", "AB−", "AB+" }));
        jC_bloodType.setToolTipText("Blood Type");
        jC_bloodType.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jC_bloodTypeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jC_bloodTypeFocusLost(evt);
            }
        });

        jL_schoolLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/School Logo Small.png"))); // NOI18N

        jL_gender.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_gender.setText("Gender");

        jCB_genderMale.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jCB_genderMale.setText(" Male");
        jCB_genderMale.setToolTipText("Gender #Male");
        jCB_genderMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_genderMaleActionPerformed(evt);
            }
        });

        jCB_genderFemale.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jCB_genderFemale.setText(" Female");
        jCB_genderFemale.setToolTipText("Gender #Female");
        jCB_genderFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_genderFemaleActionPerformed(evt);
            }
        });

        jCB_AddressSame.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jCB_AddressSame.setText(" Same");
        jCB_AddressSame.setToolTipText("Gender #Male");
        jCB_AddressSame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_AddressSameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFundaInfoLayout = new javax.swing.GroupLayout(jPanelFundaInfo);
        jPanelFundaInfo.setLayout(jPanelFundaInfoLayout);
        jPanelFundaInfoLayout.setHorizontalGroup(
            jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrlPAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTF_EmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jC_Position, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTF_EmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scrlPAddr1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCB_AddressSame))
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jL_employeePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFundaInfoLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLblDoB)
                                    .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                                        .addGap(20, 20, 20)
                                                        .addComponent(jCB_genderMale)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jCB_genderFemale))
                                                    .addComponent(jL_gender))
                                                .addGap(0, 38, Short.MAX_VALUE))
                                            .addComponent(jP_dateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFundaInfoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jC_religion, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jC_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                        .addComponent(jC_bloodType, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrlEduQua, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scrlOtherQua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jT_contactNo)
                            .addComponent(jT_emergencyContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jL_schoolLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelFundaInfoLayout.setVerticalGroup(
            jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                        .addComponent(jL_schoolLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(scrlEduQua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(scrlOtherQua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jT_contactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jT_emergencyContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                .addComponent(jTF_EmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTF_EmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jC_Position, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jL_employeePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrlPAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                .addComponent(jLblDoB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jP_dateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jL_gender)
                            .addComponent(jCB_AddressSame))
                        .addGap(5, 5, 5)
                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCB_genderMale)
                                    .addComponent(jCB_genderFemale))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                                .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFundaInfoLayout.createSequentialGroup()
                                        .addGroup(jPanelFundaInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jC_bloodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jC_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFundaInfoLayout.createSequentialGroup()
                                        .addComponent(jC_religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66))))
                            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                                .addComponent(scrlPAddr1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
            .addGroup(jPanelFundaInfoLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelControls.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.orange), "Controls"));
        jPanelControls.setToolTipText("Controls");

        jB_update.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_update.setText("Update");
        jB_update.setToolTipText("Update selected student information");
        jB_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_updateActionPerformed(evt);
            }
        });

        jB_save.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_save.setText("Save");
        jB_save.setToolTipText("Save define student information");
        jB_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_saveActionPerformed(evt);
            }
        });

        jB_refresh.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_refresh.setText("Refresh");
        jB_refresh.setToolTipText("Refresh all elements");
        jB_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_refreshActionPerformed(evt);
            }
        });

        jB_delete.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_delete.setText("Delete");
        jB_delete.setToolTipText("Delect selected student information");
        jB_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelControlsLayout = new javax.swing.GroupLayout(jPanelControls);
        jPanelControls.setLayout(jPanelControlsLayout);
        jPanelControlsLayout.setHorizontalGroup(
            jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jB_save, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jB_update, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jB_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jB_refresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelControlsLayout.setVerticalGroup(
            jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_save)
                    .addComponent(jB_update)
                    .addComponent(jB_delete)
                    .addComponent(jB_refresh))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSearchBox.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.pink), "Search by Id"));

        jT_searchBox.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_searchBox.setText("Search by Employee Id");
        jT_searchBox.setToolTipText("Serach by Id or, Name");
        jT_searchBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jT_searchBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jT_searchBoxFocusLost(evt);
            }
        });

        jB_searching.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_searching.setText("search");
        jB_searching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_searchingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchBoxLayout = new javax.swing.GroupLayout(jPanelSearchBox);
        jPanelSearchBox.setLayout(jPanelSearchBoxLayout);
        jPanelSearchBoxLayout.setHorizontalGroup(
            jPanelSearchBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jT_searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jB_searching)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSearchBoxLayout.setVerticalGroup(
            jPanelSearchBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_searching))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jL_status.setBackground(new java.awt.Color(0, 0, 0));
        jL_status.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jL_status.setForeground(new java.awt.Color(255, 0, 0));
        jL_status.setText("Status...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jL_status)
                    .addComponent(jPanelFundaInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanelFundaInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelSearchBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jL_status)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RefreshThisForm() {
        jTF_EmployeeId.setText("EMP-" + (autoId.IdGenerator("ProfileEmployeeAdd")));
        pD = new ProjectDesign();
        pD.phTextField = jTF_EmployeeName;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Employee Name");
        jL_employeePhoto.setIcon(null);
        jL_employeePhoto.setText("<html><body><p style=\"text-align:center;\">Student<br\\>Photo</p></body></html>");
        jL_employeePhoto.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        pD.phComboBox = jC_Position;
        pD.phComboBox.setSelectedItem("<select position>");
        pD.placeHolder("jComboBox", "FL", "<select position>");
        pD.phTextArea = jTA_parmanentAddr;
        pD.phTextArea.setText("");
        pD.placeHolder("jTextArea", "FL", "Parmanent Address");
        pD.phTextArea = jTA_temporaryAddr;
        pD.phTextArea.setText("");
        pD.placeHolder("jTextArea", "FL", "Temporary Address");
        ((JTextField) jDC_DateOfBirth.getDateEditor().getUiComponent()).setText("");
        pD.phCheckBox = jCB_genderMale;
        pD.phCheckBox.setSelected(false);
        pD.placeHolder("jCheckBox", "FL", "Male");
        pD.phCheckBox = jCB_genderFemale;
        pD.phCheckBox.setSelected(false);
        pD.placeHolder("jCheckBox", "FL", "Female");
        pD.phComboBox = jC_bloodType;
        pD.phComboBox.setSelectedItem("<select blood type>");
        pD.placeHolder("jComboBox", "FL", "<select blood type>");
        pD.phComboBox = jC_religion;
        pD.phComboBox.setSelectedItem("<select religion>");
        pD.placeHolder("jComboBox", "FL", "<select religion>");
        pD.phComboBox = jC_nationality;
        pD.phComboBox.setSelectedItem("<select nationality>");
        pD.placeHolder("jComboBox", "FL", "<select nationality>");
        pD.phTextArea = jTA_eduQualification;
        pD.phTextArea.setText("");
        pD.placeHolder("jTextArea", "FL", "Educational Qualification");
        pD.phTextArea = jTA_otherQualification;
        pD.phTextArea.setText("");
        pD.placeHolder("jTextArea", "FL", "Other Qualification");
        pD.phTextField = jT_contactNo;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Contact No");
        pD.phTextField = jT_emergencyContactNo;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Emergency Contact No");
        pD.phTextField = jT_searchBox;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Search by Employee Id");
        jL_status.setText("Status...");
    }
    
    private void jTF_EmployeeNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_EmployeeNameFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jTF_EmployeeName;
        pD.placeHolder("jTextField", "FG", "Employee Name");
    }//GEN-LAST:event_jTF_EmployeeNameFocusGained

    private void jTF_EmployeeNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_EmployeeNameFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jTF_EmployeeName;
        pD.placeHolder("jTextField", "FL", "Employee Name");
    }//GEN-LAST:event_jTF_EmployeeNameFocusLost

    private void jT_contactNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jT_contactNoFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jT_contactNo;
        pD.placeHolder("jTextField", "FG", "Contact No");
    }//GEN-LAST:event_jT_contactNoFocusGained

    private void jT_contactNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jT_contactNoFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jT_contactNo;
        pD.placeHolder("jTextField", "FL", "Contact No");
    }//GEN-LAST:event_jT_contactNoFocusLost

    private void jT_emergencyContactNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jT_emergencyContactNoFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jT_emergencyContactNo;
        pD.placeHolder("jTextField", "FG", "Emergency Contact No");
    }//GEN-LAST:event_jT_emergencyContactNoFocusGained

    private void jT_emergencyContactNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jT_emergencyContactNoFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jT_emergencyContactNo;
        pD.placeHolder("jTextField", "FL", "Emergency Contact No");
    }//GEN-LAST:event_jT_emergencyContactNoFocusLost

    private void jT_searchBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jT_searchBoxFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jT_searchBox;
        pD.placeHolder("jTextField", "FG", "Search by Employee Id");
    }//GEN-LAST:event_jT_searchBoxFocusGained

    private void jT_searchBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jT_searchBoxFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jT_searchBox;
        pD.placeHolder("jTextField", "FL", "Search by Employee Id");
    }//GEN-LAST:event_jT_searchBoxFocusLost

    private void jTA_parmanentAddrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_parmanentAddrFocusGained
        pD = new ProjectDesign();
        pD.phTextArea = jTA_parmanentAddr;
        pD.placeHolder("jTextArea", "FG", "Parmanent Address");
    }//GEN-LAST:event_jTA_parmanentAddrFocusGained

    private void jTA_parmanentAddrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_parmanentAddrFocusLost
        pD = new ProjectDesign();
        pD.phTextArea = jTA_parmanentAddr;
        pD.placeHolder("jTextArea", "FL", "Parmanent Address");
    }//GEN-LAST:event_jTA_parmanentAddrFocusLost

    private void jTA_temporaryAddrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_temporaryAddrFocusGained
        pD = new ProjectDesign();
        pD.phTextArea = jTA_temporaryAddr;
        pD.placeHolder("jTextArea", "FG", "Temporary Address");
    }//GEN-LAST:event_jTA_temporaryAddrFocusGained

    private void jTA_temporaryAddrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_temporaryAddrFocusLost
        pD = new ProjectDesign();
        pD.phTextArea = jTA_temporaryAddr;
        pD.placeHolder("jTextArea", "FL", "Temporary Address");
    }//GEN-LAST:event_jTA_temporaryAddrFocusLost

    private void jTA_eduQualificationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_eduQualificationFocusGained
        pD = new ProjectDesign();
        pD.phTextArea = jTA_eduQualification;
        pD.placeHolder("jTextArea", "FG", "Educational Qualification");
    }//GEN-LAST:event_jTA_eduQualificationFocusGained

    private void jTA_eduQualificationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_eduQualificationFocusLost
        pD = new ProjectDesign();
        pD.phTextArea = jTA_eduQualification;
        pD.placeHolder("jTextArea", "FL", "Educational Qualification");
    }//GEN-LAST:event_jTA_eduQualificationFocusLost

    private void jTA_otherQualificationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_otherQualificationFocusGained
        pD = new ProjectDesign();
        pD.phTextArea = jTA_otherQualification;
        pD.placeHolder("jTextArea", "FG", "Other Qualification");
    }//GEN-LAST:event_jTA_otherQualificationFocusGained

    private void jTA_otherQualificationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTA_otherQualificationFocusLost
        pD = new ProjectDesign();
        pD.phTextArea = jTA_otherQualification;
        pD.placeHolder("jTextArea", "FL", "Other Qualification");
    }//GEN-LAST:event_jTA_otherQualificationFocusLost

    private void jC_PositionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_PositionFocusGained
        pD = new ProjectDesign();
        pD.phComboBox = jC_Position;
        pD.placeHolder("jComboBox", "FG", "<select position>");
    }//GEN-LAST:event_jC_PositionFocusGained

    private void jC_PositionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_PositionFocusLost
        pD = new ProjectDesign();
        pD.phComboBox = jC_Position;
        pD.placeHolder("jComboBox", "FL", "<select position>");
    }//GEN-LAST:event_jC_PositionFocusLost

    private void jC_bloodTypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_bloodTypeFocusGained
        pD = new ProjectDesign();
        pD.phComboBox = jC_bloodType;
        pD.placeHolder("jComboBox", "FG", "<select blood type>");
    }//GEN-LAST:event_jC_bloodTypeFocusGained

    private void jC_bloodTypeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_bloodTypeFocusLost
        pD = new ProjectDesign();
        pD.phComboBox = jC_bloodType;
        pD.placeHolder("jComboBox", "FL", "<select blood type>");
    }//GEN-LAST:event_jC_bloodTypeFocusLost

    private void jC_religionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_religionFocusGained
        pD = new ProjectDesign();
        pD.phComboBox = jC_religion;
        pD.placeHolder("jComboBox", "FG", "<select religion>");
    }//GEN-LAST:event_jC_religionFocusGained

    private void jC_religionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_religionFocusLost
        pD = new ProjectDesign();
        pD.phComboBox = jC_religion;
        pD.placeHolder("jComboBox", "FL", "<select religion>");
    }//GEN-LAST:event_jC_religionFocusLost

    private void jC_nationalityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_nationalityFocusGained
        pD = new ProjectDesign();
        pD.phComboBox = jC_nationality;
        pD.placeHolder("jComboBox", "FG", "<select nationality>");
    }//GEN-LAST:event_jC_nationalityFocusGained

    private void jC_nationalityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jC_nationalityFocusLost
        pD = new ProjectDesign();
        pD.phComboBox = jC_nationality;
        pD.placeHolder("jComboBox", "FL", "<select nationality>");
    }//GEN-LAST:event_jC_nationalityFocusLost

    private void jCB_genderMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_genderMaleActionPerformed
        pD = new ProjectDesign();
        if (jCB_genderMale.isSelected()) {
            jCB_genderFemale.setSelected(false);
            pD.phCheckBox = jCB_genderMale;
            pD.placeHolder("jCheckBox", "FG", "Male");
            pD.phCheckBox = jCB_genderFemale;
            pD.placeHolder("jCheckBox", "FL", "Female");
        }
    }//GEN-LAST:event_jCB_genderMaleActionPerformed

    private void jCB_genderFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_genderFemaleActionPerformed
        pD = new ProjectDesign();
        if (jCB_genderFemale.isSelected()) {
            jCB_genderMale.setSelected(false);
            pD.phCheckBox = jCB_genderFemale;
            pD.placeHolder("jCheckBox", "FG", "Female");
            pD.phCheckBox = jCB_genderMale;
            pD.placeHolder("jCheckBox", "FL", "Male");
        }
    }//GEN-LAST:event_jCB_genderFemaleActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        pD = new ProjectDesign();
        pD.phJDateChooser = jDC_DateOfBirth;
        pD.phJPanel = jP_dateOfBirth;
        pD.placeHolder("jDateChooser", "FG", "BirthDate");
        if (jDC_DateOfBirth.getDate() == null) {
            pD.placeHolder("jDateChooser", "FL", "BirthDate");
        }
    }//GEN-LAST:event_formMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void jL_employeePhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jL_employeePhotoMouseClicked
        imageModel = new ImageModel();
        jL_employeePhoto.setText("");
        jL_employeePhoto.setBorder(javax.swing.BorderFactory.createEmptyBorder());
        jL_employeePhoto.setIcon(imageModel.AddImage());
        jL_status.setText(imageModel.FileURL);
    }//GEN-LAST:event_jL_employeePhotoMouseClicked

    private void jB_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_saveActionPerformed
        try {
            String sqlString = "INSERT INTO EMPLOYEEDATASET(EMPID, EMPNAME, EMPPHOTO, EMPPOSITION,"
                    + "EMPPADDRESS, EMPTADDRESS, EMPDATEOFBIRTH, EMPGENDER, EMPBLOODGROUP, EMPRELIGION,"
                    + "EMPNATIONALITY, EMPEDUQUALIFICATION, EMPOTHERQUALIFICATION, EMPCONTACTNO,"
                    + "EMPECONTACTNO) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            profileModel = new EmployeeModel();
            profileModel.Id = jTF_EmployeeId.getText().toUpperCase();
            profileModel.Name = jTF_EmployeeName.getText().toUpperCase();
            profileModel.PhotographInByte = imageModel.ConvertImageToByteArray(jL_employeePhoto.getIcon());
            profileModel.Position = jC_Position.getSelectedItem().toString().toUpperCase();
            profileModel.ParmanentAddr = jTA_parmanentAddr.getText().toUpperCase();;
            profileModel.TemporaryAddr = jTA_temporaryAddr.getText().toUpperCase();;
            profileModel.DateOfBirth = ((JTextField) jDC_DateOfBirth.getDateEditor().getUiComponent()).getText();
            profileModel.Gender = (jCB_genderMale.isSelected()) ? "Male".toUpperCase() : "Female".toUpperCase();
            profileModel.BloodGroup = jC_bloodType.getSelectedItem().toString();
            profileModel.Religion = jC_religion.getSelectedItem().toString().toUpperCase();
            profileModel.Nationality = jC_nationality.getSelectedItem().toString().toUpperCase();
            profileModel.EduQualification = jTA_eduQualification.getText().toUpperCase();
            profileModel.OtherQualification = jTA_otherQualification.getText().toUpperCase();
            profileModel.ContactNo = jT_contactNo.getText();
            profileModel.EmergencyContactNo = jT_emergencyContactNo.getText();
            String feedBack = profileModel.ValidityCheck();
            if ("Checked!!!".equals(feedBack)) {
                feedBack = profileModel.SaveEmpProfile(sqlString);
            }
            JOptionPane.showMessageDialog(this, feedBack);
            jL_status.setText(feedBack);
            RefreshThisForm();
        } catch (SQLException ex) {
            Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_saveActionPerformed

    private void jB_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_updateActionPerformed
        try {
            String sqlString = "UPDATE EMPLOYEEDATASET SET EMPID = ?, EMPNAME = ?, EMPPHOTO = ?,"
                    + "EMPPOSITION = ?, EMPPADDRESS = ?, EMPTADDRESS = ?, EMPDATEOFBIRTH = ?, EMPGENDER = ?,"
                    + "EMPBLOODGROUP = ?, EMPRELIGION = ?, EMPNATIONALITY = ?, EMPEDUQUALIFICATION = ?,"
                    + "EMPOTHERQUALIFICATION = ?, EMPCONTACTNO = ?, EMPECONTACTNO = ? WHERE EMPID = ?";
            profileModel = new EmployeeModel();
            profileModel.Id = jTF_EmployeeId.getText().toUpperCase();
            profileModel.Name = jTF_EmployeeName.getText().toUpperCase();
            profileModel.PhotographInByte = imageModel.ConvertImageToByteArray(jL_employeePhoto.getIcon());
            profileModel.Position = jC_Position.getSelectedItem().toString().toUpperCase();;
            profileModel.ParmanentAddr = jTA_parmanentAddr.getText().toUpperCase();;
            profileModel.TemporaryAddr = jTA_temporaryAddr.getText().toUpperCase();;
            profileModel.DateOfBirth = ((JTextField) jDC_DateOfBirth.getDateEditor().getUiComponent()).getText();
            profileModel.Gender = (jCB_genderMale.isSelected()) ? "Male".toUpperCase() : "Female".toUpperCase();
            profileModel.BloodGroup = jC_bloodType.getSelectedItem().toString();
            profileModel.Religion = jC_religion.getSelectedItem().toString().toUpperCase();
            profileModel.Nationality = jC_nationality.getSelectedItem().toString().toUpperCase();
            profileModel.EduQualification = jTA_eduQualification.getText().toUpperCase();
            profileModel.OtherQualification = jTA_otherQualification.getText().toUpperCase();
            profileModel.ContactNo = jT_contactNo.getText();
            profileModel.EmergencyContactNo = jT_emergencyContactNo.getText();

            profileModel.SearchId = jT_searchBox.getText().toUpperCase();

            String feedBack = profileModel.ValidityCheck();
            if ("Checked!!!".equals(feedBack)) {
                feedBack = profileModel.UpdateEmpProfile(sqlString);
            }
            JOptionPane.showMessageDialog(this, feedBack);
            jL_status.setText(feedBack);
            RefreshThisForm();
        } catch (SQLException ex) {
            Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_updateActionPerformed

    private void jB_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_refreshActionPerformed
        RefreshThisForm();
    }//GEN-LAST:event_jB_refreshActionPerformed

    private void jB_searchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_searchingActionPerformed
        try {
            String sqlString = "SELECT * FROM EMPLOYEEDATASET WHERE EMPID = ?";

            profileModel = new EmployeeModel();
            profileModel.SearchId = jT_searchBox.getText();
            String feedBack = profileModel.SearchEmpProfile(sqlString);
            if ("All Retrive".equals(feedBack)) {
                jTF_EmployeeId.setText(profileModel.Id);
                jTF_EmployeeName.setText(profileModel.Name);
                jL_employeePhoto.setIcon(profileModel.PhotographInIcon);
                for (int i = 0; i < jC_Position.getModel().getSize(); i++) {
                    if (profileModel.Position.equals(jC_Position.getModel().getElementAt(i).toUpperCase())) {
                        jC_Position.setSelectedIndex(i);
                        break;
                    }
                }
                jTA_parmanentAddr.setText(profileModel.ParmanentAddr);
                jTA_temporaryAddr.setText(profileModel.TemporaryAddr);
                jDC_DateOfBirth.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(profileModel.DateOfBirth));
                if ("male".equals(profileModel.Gender.toLowerCase())) {
                    jCB_genderMale.setSelected(true);
                } else {
                    jCB_genderFemale.setSelected(true);
                }
                jC_bloodType.setSelectedItem(profileModel.BloodGroup);
                for (int i = 0; i < jC_religion.getModel().getSize(); i++) {
                    if (profileModel.Religion.equals(jC_religion.getModel().getElementAt(i).toUpperCase())) {
                        jC_religion.setSelectedIndex(i);
                        break;
                    }
                }
                for (int i = 0; i < jC_nationality.getModel().getSize(); i++) {
                    if (profileModel.Nationality.toUpperCase().equals(jC_nationality.getModel().getElementAt(i).toUpperCase())) {
                        jC_nationality.setSelectedIndex(i);
                        break;
                    }
                }
                jTA_eduQualification.setText(profileModel.EduQualification);
                jTA_otherQualification.setText(profileModel.OtherQualification);
                jT_contactNo.setText(profileModel.ContactNo);
                jT_emergencyContactNo.setText(profileModel.EmergencyContactNo);
            }
            jL_employeePhoto.setText("");
            jL_employeePhoto.setBorder(javax.swing.BorderFactory.createEmptyBorder());
            jL_status.setText("All Information Retrived...");
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_searchingActionPerformed

    private void jB_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_deleteActionPerformed
        try {
            String sqlString = "DELETE FROM EMPLOYEEDATASET WHERE EMPID = ?";
            profileModel = new EmployeeModel();
            profileModel.SearchId = jT_searchBox.getText().toUpperCase();
            String feedBack = profileModel.DeleteEmpProfile(sqlString);
            JOptionPane.showMessageDialog(this, feedBack);
            jL_status.setText(feedBack);
            RefreshThisForm();
        } catch (SQLException ex) {
            Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_deleteActionPerformed

    private void jCB_AddressSameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_AddressSameActionPerformed
        if(jCB_AddressSame.isSelected()) {
            jTA_temporaryAddr.setText(jTA_parmanentAddr.getText());
            jTA_temporaryAddr.setEditable(false);
        } else {
            jTA_temporaryAddr.setText("");
            jTA_temporaryAddr.setEditable(true);
        }
    }//GEN-LAST:event_jCB_AddressSameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ProfileEmployeeAdd().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ProfileEmployeeAdd.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_delete;
    private javax.swing.JButton jB_refresh;
    private javax.swing.JButton jB_save;
    private javax.swing.JButton jB_searching;
    private javax.swing.JButton jB_update;
    private javax.swing.JCheckBox jCB_AddressSame;
    private javax.swing.JCheckBox jCB_genderFemale;
    private javax.swing.JCheckBox jCB_genderMale;
    private javax.swing.JComboBox<String> jC_Position;
    private javax.swing.JComboBox<String> jC_bloodType;
    private javax.swing.JComboBox<String> jC_nationality;
    private javax.swing.JComboBox<String> jC_religion;
    private com.toedter.calendar.JDateChooser jDC_DateOfBirth;
    private javax.swing.JLabel jL_employeePhoto;
    private javax.swing.JLabel jL_gender;
    private javax.swing.JLabel jL_schoolLogo;
    private javax.swing.JLabel jL_status;
    private javax.swing.JLabel jLblDoB;
    private javax.swing.JPanel jP_dateOfBirth;
    private javax.swing.JPanel jPanelControls;
    private javax.swing.JPanel jPanelFundaInfo;
    private javax.swing.JPanel jPanelSearchBox;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTA_eduQualification;
    private javax.swing.JTextArea jTA_otherQualification;
    private javax.swing.JTextArea jTA_parmanentAddr;
    private javax.swing.JTextArea jTA_temporaryAddr;
    private javax.swing.JTextField jTF_EmployeeId;
    private javax.swing.JTextField jTF_EmployeeName;
    private javax.swing.JTextField jT_contactNo;
    private javax.swing.JTextField jT_emergencyContactNo;
    private javax.swing.JTextField jT_searchBox;
    private javax.swing.JScrollPane scrlEduQua;
    private javax.swing.JScrollPane scrlOtherQua;
    private javax.swing.JScrollPane scrlPAddr;
    private javax.swing.JScrollPane scrlPAddr1;
    // End of variables declaration//GEN-END:variables
}

package UIs;

import Classes.AccountModel;
import Classes.AutomaticIdGenerator;
import Classes.ProjectDesign;
import Classes.EmployeeModel;
import Classes.LibraryBookModel;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class AccountStuFees extends javax.swing.JFrame {

    AccountModel aM;
    ProjectDesign pD;
    AutomaticIdGenerator autoId;
    String filePath = "";
    String[] studentInfoForPaySlip;
    String[][] paymentDataForPaySlip = new String[2][22];

    public AccountStuFees() throws SQLException, SQLException {
        initComponents();
        GetCurrentSystemDate();
        PopulateAllEmpInfor();  
        this.autoId = new AutomaticIdGenerator();
        jTF_PaymentId.setText("PAY-" + (autoId.IdGenerator("AccountStuFees")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jL_schoolAddress = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jL_nameOfSchool = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTF_SearchBox = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDC_PaymentDate = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTF_PaymentId = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jTF_StudentId = new javax.swing.JTextField();
        jL_StudentName = new javax.swing.JLabel();
        jL_StudentClass = new javax.swing.JLabel();
        jL_StudentSection = new javax.swing.JLabel();
        jL_StudentMajor = new javax.swing.JLabel();
        jB_ReloadPage = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jC_AdmissionFee = new javax.swing.JCheckBox();
        jTF_AdmissionFee = new javax.swing.JTextField();
        jL_SelectPaymentTypes = new javax.swing.JLabel();
        jC_MonthlyFee = new javax.swing.JCheckBox();
        jTF_MonthlyFee = new javax.swing.JTextField();
        jC_SemesterFee = new javax.swing.JCheckBox();
        jTF_SemesterFee = new javax.swing.JTextField();
        jC_YearlyFee = new javax.swing.JCheckBox();
        jTF_YearlyFee = new javax.swing.JTextField();
        jC_AdmissionFormFee = new javax.swing.JCheckBox();
        jTF_AdmissionFormFee = new javax.swing.JTextField();
        jC_ExamFee = new javax.swing.JCheckBox();
        jTF_ExamFee = new javax.swing.JTextField();
        jC_PenaltyFee = new javax.swing.JCheckBox();
        jTF_PenaltyFee = new javax.swing.JTextField();
        jC_TranscriptsFee = new javax.swing.JCheckBox();
        jTF_TranscriptsFee = new javax.swing.JTextField();
        jTF_MainCertificateFee = new javax.swing.JTextField();
        jC_MainCertificateFee = new javax.swing.JCheckBox();
        jC_BoardFee = new javax.swing.JCheckBox();
        jTF_BoardFee = new javax.swing.JTextField();
        jC_CeremonyFee = new javax.swing.JCheckBox();
        jTF_CeremonyFee = new javax.swing.JTextField();
        jC_SportsFee = new javax.swing.JCheckBox();
        jTF_SportsFee = new javax.swing.JTextField();
        jC_IdCardFee = new javax.swing.JCheckBox();
        jTF_IdCardFee = new javax.swing.JTextField();
        jC_ScoutFee = new javax.swing.JCheckBox();
        jTF_ScoutFee = new javax.swing.JTextField();
        jC_CharacterCertificateFee = new javax.swing.JCheckBox();
        jTF_CharacterCertificateFee = new javax.swing.JTextField();
        jC_TransferFee = new javax.swing.JCheckBox();
        jTF_TransferFee = new javax.swing.JTextField();
        jC_ExamCenterFee = new javax.swing.JCheckBox();
        jTF_ExamCenterFee = new javax.swing.JTextField();
        jC_TransferCertificateFee = new javax.swing.JCheckBox();
        jTF_TransferCertificateFee = new javax.swing.JTextField();
        jC_UniformFee = new javax.swing.JCheckBox();
        jTF_UniformFee = new javax.swing.JTextField();
        jC_StudyTourFee = new javax.swing.JCheckBox();
        jTF_StudyTourFee = new javax.swing.JTextField();
        jC_PicnicFee = new javax.swing.JCheckBox();
        jTF_PicnicFee = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jL_TotalAmount = new javax.swing.JLabel();
        jL_BDT = new javax.swing.JLabel();
        jTF_TotalAmount = new javax.swing.JTextField();
        jB_Save = new javax.swing.JButton();
        jB_Delete = new javax.swing.JButton();
        jB_Update = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        jCB_EmployeeList = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student Payment Voucher");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/School Logo Large.png"))); // NOI18N
        jLabel4.setToolTipText("School Logo");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Tel: 122-455-7788 | Fax: 444-555-6666");

        jL_schoolAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jL_schoolAddress.setText("School address goes here");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Email: example@email.com");

        jL_nameOfSchool.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jL_nameOfSchool.setForeground(new java.awt.Color(255, 87, 51));
        jL_nameOfSchool.setText("NAME OF THE SCHOOL");
        jL_nameOfSchool.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("City, State, Zip code");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jL_nameOfSchool)
                    .addComponent(jL_schoolAddress)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel20))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jL_nameOfSchool)
                .addGap(5, 5, 5)
                .addComponent(jL_schoolAddress)
                .addGap(5, 5, 5)
                .addComponent(jLabel10)
                .addGap(5, 5, 5)
                .addComponent(jLabel11)
                .addGap(5, 5, 5)
                .addComponent(jLabel20)
                .addContainerGap())
        );

        jTF_SearchBox.setBackground(new java.awt.Color(255, 153, 153));
        jTF_SearchBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTF_SearchBox.setText("Search by Payment Id...");
        jTF_SearchBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTF_SearchBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_SearchBoxFocusLost(evt);
            }
        });
        jTF_SearchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_SearchBoxActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Payment Date");

        jDC_PaymentDate.setForeground(new java.awt.Color(255, 0, 0));
        jDC_PaymentDate.setToolTipText("payment date");
        jDC_PaymentDate.setDateFormatString("yyyy-MM-dd");
        jDC_PaymentDate.setEnabled(false);
        jDC_PaymentDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("STUDENT PAYMENT VOUCHER");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(221, 221, 221))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addGap(5, 5, 5))
        );

        jTF_PaymentId.setEditable(false);
        jTF_PaymentId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTF_PaymentId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_PaymentId.setText("Payment Id");

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setForeground(java.awt.Color.red);

        jTF_StudentId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTF_StudentId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_StudentId.setText("Enter Student Id...");
        jTF_StudentId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTF_StudentIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_StudentIdFocusLost(evt);
            }
        });
        jTF_StudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_StudentIdActionPerformed(evt);
            }
        });

        jL_StudentName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jL_StudentName.setForeground(new java.awt.Color(255, 87, 51));
        jL_StudentName.setText("Name of Student");
        jL_StudentName.setToolTipText("");

        jL_StudentClass.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jL_StudentClass.setForeground(new java.awt.Color(255, 87, 51));
        jL_StudentClass.setText("Class");
        jL_StudentClass.setToolTipText("");

        jL_StudentSection.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jL_StudentSection.setForeground(new java.awt.Color(255, 87, 51));
        jL_StudentSection.setText("Section");
        jL_StudentSection.setToolTipText("");

        jL_StudentMajor.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jL_StudentMajor.setForeground(new java.awt.Color(255, 87, 51));
        jL_StudentMajor.setText("Major");
        jL_StudentMajor.setToolTipText("");

        jB_ReloadPage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jB_ReloadPage.setText("Reload Page");
        jB_ReloadPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_ReloadPageActionPerformed(evt);
            }
        });

        jSeparator4.setForeground(java.awt.Color.red);

        jC_AdmissionFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_AdmissionFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_AdmissionFee.setText(" Admission Fee");
        jC_AdmissionFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_AdmissionFeeActionPerformed(evt);
            }
        });

        jTF_AdmissionFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_AdmissionFee.setEnabled(false);
        jTF_AdmissionFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_AdmissionFeeActionPerformed(evt);
            }
        });

        jL_SelectPaymentTypes.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jL_SelectPaymentTypes.setText("Select Payment Types");
        jL_SelectPaymentTypes.setToolTipText("");

        jC_MonthlyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_MonthlyFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_MonthlyFee.setText(" Monthly Fee");
        jC_MonthlyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_MonthlyFeeActionPerformed(evt);
            }
        });

        jTF_MonthlyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_MonthlyFee.setEnabled(false);
        jTF_MonthlyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_MonthlyFeeActionPerformed(evt);
            }
        });

        jC_SemesterFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_SemesterFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_SemesterFee.setText(" Semester Fee");
        jC_SemesterFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_SemesterFeeActionPerformed(evt);
            }
        });

        jTF_SemesterFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_SemesterFee.setEnabled(false);
        jTF_SemesterFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_SemesterFeeActionPerformed(evt);
            }
        });

        jC_YearlyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_YearlyFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_YearlyFee.setText(" Yearly Fee");
        jC_YearlyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_YearlyFeeActionPerformed(evt);
            }
        });

        jTF_YearlyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_YearlyFee.setEnabled(false);
        jTF_YearlyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_YearlyFeeActionPerformed(evt);
            }
        });

        jC_AdmissionFormFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_AdmissionFormFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_AdmissionFormFee.setText(" Admission Form Fee");
        jC_AdmissionFormFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_AdmissionFormFeeActionPerformed(evt);
            }
        });

        jTF_AdmissionFormFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_AdmissionFormFee.setEnabled(false);
        jTF_AdmissionFormFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_AdmissionFormFeeActionPerformed(evt);
            }
        });

        jC_ExamFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_ExamFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_ExamFee.setText(" Exam Fee");
        jC_ExamFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_ExamFeeActionPerformed(evt);
            }
        });

        jTF_ExamFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_ExamFee.setEnabled(false);
        jTF_ExamFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_ExamFeeActionPerformed(evt);
            }
        });

        jC_PenaltyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_PenaltyFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_PenaltyFee.setText(" Penalty Fee");
        jC_PenaltyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_PenaltyFeeActionPerformed(evt);
            }
        });

        jTF_PenaltyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_PenaltyFee.setEnabled(false);
        jTF_PenaltyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_PenaltyFeeActionPerformed(evt);
            }
        });

        jC_TranscriptsFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_TranscriptsFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_TranscriptsFee.setText(" Transcripts Fee");
        jC_TranscriptsFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_TranscriptsFeeActionPerformed(evt);
            }
        });

        jTF_TranscriptsFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_TranscriptsFee.setEnabled(false);
        jTF_TranscriptsFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_TranscriptsFeeActionPerformed(evt);
            }
        });

        jTF_MainCertificateFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_MainCertificateFee.setEnabled(false);
        jTF_MainCertificateFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_MainCertificateFeeActionPerformed(evt);
            }
        });

        jC_MainCertificateFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_MainCertificateFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_MainCertificateFee.setText(" Main Certificate Fee");
        jC_MainCertificateFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_MainCertificateFeeActionPerformed(evt);
            }
        });

        jC_BoardFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_BoardFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_BoardFee.setText(" Board Fee");
        jC_BoardFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_BoardFeeActionPerformed(evt);
            }
        });

        jTF_BoardFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_BoardFee.setEnabled(false);
        jTF_BoardFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_BoardFeeActionPerformed(evt);
            }
        });

        jC_CeremonyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_CeremonyFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_CeremonyFee.setText(" Ceremony Fee");
        jC_CeremonyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_CeremonyFeeActionPerformed(evt);
            }
        });

        jTF_CeremonyFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_CeremonyFee.setEnabled(false);
        jTF_CeremonyFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_CeremonyFeeActionPerformed(evt);
            }
        });

        jC_SportsFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_SportsFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_SportsFee.setText(" Sports Fee");
        jC_SportsFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_SportsFeeActionPerformed(evt);
            }
        });

        jTF_SportsFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_SportsFee.setEnabled(false);
        jTF_SportsFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_SportsFeeActionPerformed(evt);
            }
        });

        jC_IdCardFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_IdCardFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_IdCardFee.setText(" ID/Batch Fee");
        jC_IdCardFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_IdCardFeeActionPerformed(evt);
            }
        });

        jTF_IdCardFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_IdCardFee.setEnabled(false);
        jTF_IdCardFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_IdCardFeeActionPerformed(evt);
            }
        });

        jC_ScoutFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_ScoutFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_ScoutFee.setText(" Scout Fee");
        jC_ScoutFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_ScoutFeeActionPerformed(evt);
            }
        });

        jTF_ScoutFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_ScoutFee.setEnabled(false);
        jTF_ScoutFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_ScoutFeeActionPerformed(evt);
            }
        });

        jC_CharacterCertificateFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_CharacterCertificateFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_CharacterCertificateFee.setText(" Character Certificate Fee");
        jC_CharacterCertificateFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_CharacterCertificateFeeActionPerformed(evt);
            }
        });

        jTF_CharacterCertificateFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_CharacterCertificateFee.setEnabled(false);
        jTF_CharacterCertificateFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_CharacterCertificateFeeActionPerformed(evt);
            }
        });

        jC_TransferFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_TransferFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_TransferFee.setText(" Transfer Fee");
        jC_TransferFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_TransferFeeActionPerformed(evt);
            }
        });

        jTF_TransferFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_TransferFee.setEnabled(false);
        jTF_TransferFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_TransferFeeActionPerformed(evt);
            }
        });

        jC_ExamCenterFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_ExamCenterFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_ExamCenterFee.setText(" Exam Center Fee");
        jC_ExamCenterFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_ExamCenterFeeActionPerformed(evt);
            }
        });

        jTF_ExamCenterFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_ExamCenterFee.setEnabled(false);
        jTF_ExamCenterFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_ExamCenterFeeActionPerformed(evt);
            }
        });

        jC_TransferCertificateFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_TransferCertificateFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_TransferCertificateFee.setText(" Transfer Certificate Fee");
        jC_TransferCertificateFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_TransferCertificateFeeActionPerformed(evt);
            }
        });

        jTF_TransferCertificateFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_TransferCertificateFee.setEnabled(false);
        jTF_TransferCertificateFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_TransferCertificateFeeActionPerformed(evt);
            }
        });

        jC_UniformFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_UniformFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_UniformFee.setText(" Uniform Fee");
        jC_UniformFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_UniformFeeActionPerformed(evt);
            }
        });

        jTF_UniformFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_UniformFee.setEnabled(false);
        jTF_UniformFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_UniformFeeActionPerformed(evt);
            }
        });

        jC_StudyTourFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_StudyTourFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_StudyTourFee.setText(" Study Tour Fee");
        jC_StudyTourFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_StudyTourFeeActionPerformed(evt);
            }
        });

        jTF_StudyTourFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_StudyTourFee.setEnabled(false);
        jTF_StudyTourFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_StudyTourFeeActionPerformed(evt);
            }
        });

        jC_PicnicFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jC_PicnicFee.setForeground(new java.awt.Color(255, 87, 51));
        jC_PicnicFee.setText(" Picnic Fee");
        jC_PicnicFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_PicnicFeeActionPerformed(evt);
            }
        });

        jTF_PicnicFee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTF_PicnicFee.setEnabled(false);
        jTF_PicnicFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_PicnicFeeActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 87, 51));
        jLabel19.setText("Payment Authorized By:");
        jLabel19.setToolTipText("");

        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator7.setForeground(java.awt.Color.red);

        jL_TotalAmount.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jL_TotalAmount.setText("Total Amount");
        jL_TotalAmount.setToolTipText("Conveyance Allowance");

        jL_BDT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jL_BDT.setText("BDT");
        jL_BDT.setToolTipText("Basic and Dearness Allowance");

        jTF_TotalAmount.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTF_TotalAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTF_TotalAmount.setToolTipText("House Rent Allowance");

        jB_Save.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jB_Save.setText("Save");
        jB_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_SaveActionPerformed(evt);
            }
        });

        jB_Delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jB_Delete.setText("Delete");
        jB_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_DeleteActionPerformed(evt);
            }
        });

        jB_Update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jB_Update.setText("Update");
        jB_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_UpdateActionPerformed(evt);
            }
        });

        jSeparator8.setForeground(new java.awt.Color(0, 0, 0));

        jCB_EmployeeList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCB_EmployeeList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select Employee>" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jB_ReloadPage))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jDC_PaymentDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTF_SearchBox)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(54, 54, 54)
                                                .addComponent(jL_StudentName)
                                                .addGap(55, 55, 55)
                                                .addComponent(jL_StudentClass)
                                                .addGap(55, 55, 55)
                                                .addComponent(jL_StudentSection)
                                                .addGap(55, 55, 55)
                                                .addComponent(jL_StudentMajor))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jSeparator3)
                                                    .addComponent(jSeparator4)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGap(2, 2, 2)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(jL_SelectPaymentTypes)
                                                                    .addComponent(jTF_StudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_IdCardFee))
                                                                            .addComponent(jC_IdCardFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_UniformFee))
                                                                            .addComponent(jC_UniformFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_ScoutFee))
                                                                            .addComponent(jC_ScoutFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_SportsFee))
                                                                            .addComponent(jC_SportsFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_PenaltyFee))
                                                                            .addComponent(jC_PenaltyFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_PicnicFee))
                                                                            .addComponent(jC_PicnicFee)))
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_AdmissionFormFee))
                                                                            .addComponent(jC_AdmissionFormFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_AdmissionFee))
                                                                            .addComponent(jC_AdmissionFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_MonthlyFee))
                                                                            .addComponent(jC_MonthlyFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_SemesterFee))
                                                                            .addComponent(jC_SemesterFee))
                                                                        .addGap(20, 20, 20)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                .addGap(21, 21, 21)
                                                                                .addComponent(jTF_YearlyFee))
                                                                            .addComponent(jC_YearlyFee))))
                                                                .addGap(4, 4, 4))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jTF_PaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jLabel19)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jCB_EmployeeList, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                        .addGap(10, 10, 10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_StudyTourFee))
                                                    .addComponent(jC_StudyTourFee))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_CeremonyFee))
                                                    .addComponent(jC_CeremonyFee))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_TransferFee))
                                                    .addComponent(jC_TransferFee))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_ExamFee))
                                                    .addComponent(jC_ExamFee))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_ExamCenterFee))
                                                    .addComponent(jC_ExamCenterFee)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_BoardFee))
                                                    .addComponent(jC_BoardFee))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_CharacterCertificateFee))
                                                    .addComponent(jC_CharacterCertificateFee))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_TransferCertificateFee))
                                                    .addComponent(jC_TransferCertificateFee))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jTF_TranscriptsFee))
                                                    .addComponent(jC_TranscriptsFee)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(21, 21, 21)
                                                    .addComponent(jTF_MainCertificateFee))
                                                .addComponent(jC_MainCertificateFee))
                                            .addComponent(jSeparator6)
                                            .addComponent(jSeparator7)
                                            .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(10, 10, 10))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jL_TotalAmount)
                                                .addGap(67, 67, 67)
                                                .addComponent(jL_BDT)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTF_TotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jB_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(100, 100, 100)
                                                .addComponent(jB_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(100, 100, 100)
                                                .addComponent(jB_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)))
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTF_SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDC_PaymentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jB_ReloadPage)))
                .addGap(5, 5, 5)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTF_PaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jCB_EmployeeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jTF_StudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jL_StudentName)
                            .addComponent(jL_StudentClass)
                            .addComponent(jL_StudentSection)
                            .addComponent(jL_StudentMajor))
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jL_SelectPaymentTypes)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jC_AdmissionFee)
                                    .addGap(1, 1, 1)
                                    .addComponent(jTF_AdmissionFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jC_MonthlyFee)
                                    .addGap(1, 1, 1)
                                    .addComponent(jTF_MonthlyFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jC_SemesterFee)
                                    .addGap(1, 1, 1)
                                    .addComponent(jTF_SemesterFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jC_AdmissionFormFee)
                                .addGap(1, 1, 1)
                                .addComponent(jTF_AdmissionFormFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jC_YearlyFee)
                                .addGap(1, 1, 1)
                                .addComponent(jTF_YearlyFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jC_IdCardFee)
                                        .addGap(1, 1, 1)
                                        .addComponent(jTF_IdCardFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jC_ScoutFee)
                                        .addGap(1, 1, 1)
                                        .addComponent(jTF_ScoutFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jC_SportsFee)
                                        .addGap(1, 1, 1)
                                        .addComponent(jTF_SportsFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jC_PenaltyFee)
                                        .addGap(1, 1, 1)
                                        .addComponent(jTF_PenaltyFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jC_PicnicFee)
                                        .addGap(1, 1, 1)
                                        .addComponent(jTF_PicnicFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jC_TransferFee)
                                            .addGap(1, 1, 1)
                                            .addComponent(jTF_TransferFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jC_CeremonyFee)
                                                .addGap(1, 1, 1)
                                                .addComponent(jTF_CeremonyFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jC_StudyTourFee)
                                                .addGap(1, 1, 1)
                                                .addComponent(jTF_StudyTourFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jC_ExamFee)
                                        .addGap(1, 1, 1)
                                        .addComponent(jTF_ExamFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jC_ExamCenterFee)
                                        .addGap(1, 1, 1)
                                        .addComponent(jTF_ExamCenterFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jC_UniformFee)
                                .addGap(1, 1, 1)
                                .addComponent(jTF_UniformFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jC_BoardFee)
                                    .addGap(1, 1, 1)
                                    .addComponent(jTF_BoardFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jC_TransferCertificateFee)
                                    .addGap(1, 1, 1)
                                    .addComponent(jTF_TransferCertificateFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jC_CharacterCertificateFee)
                                .addGap(1, 1, 1)
                                .addComponent(jTF_CharacterCertificateFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jC_TranscriptsFee)
                                .addGap(1, 1, 1)
                                .addComponent(jTF_TranscriptsFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addComponent(jC_MainCertificateFee)
                        .addGap(1, 1, 1)
                        .addComponent(jTF_MainCertificateFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jL_TotalAmount)
                            .addComponent(jTF_TotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jL_BDT))
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jB_Save)
                            .addComponent(jB_Update)
                            .addComponent(jB_Delete))
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jSeparator1.getAccessibleContext().setAccessibleName("");
        jTF_AdmissionFee.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String SaveStudentPaymentInfo() {
        try {
            String sqlString = "INSERT INTO PAYMENTACCOUNT(PAYID, PAYDATE, PAYAUTHORIZE, PAYSTUID,"
                    + "PAYADMISSIONFORMFEE, PAYADMISSIONFEE, PAYMONTHFEE, PAYSEMESTERFEE, PAYYEARFEE,"
                    + "PAYIDCARDFEE, PAYUNIFORMFEE, PAYSCOUTFEE, PAYSPORTSFEE, PAYPENALTYFEE, PAYPICNICFEE,"
                    + "PAYSTUDYTOUR, PAYCEREMONY, PAYTRANSFERFEE, PAYEXAMFEE, PAYEXAMCENTERFEE,"
                    + "PAYBOARDFEE, PAYCCFEE, PAYTCFEE, PAYTRANSCRIPTSFEE, PAYMCFEE, PAYTOTALAMOUNT)"
                    + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            aM = new AccountModel();
            aM.Id = jTF_PaymentId.getText().toUpperCase();
            aM.Date = ((JTextField) jDC_PaymentDate.getDateEditor().getUiComponent()).getText();
            aM.Name = jCB_EmployeeList.getSelectedItem().toString().toUpperCase();
            aM.StudentId = jTF_StudentId.getText().toUpperCase();
            if(jC_AdmissionFormFee.isSelected() == false) {
                aM.AdmissionFormFee = "0.0";
            } else {
                aM.AdmissionFormFee = jTF_AdmissionFormFee.getText();
                
                paymentDataForPaySlip[0][0] = jC_AdmissionFormFee.getText();
                paymentDataForPaySlip[1][0] = jTF_AdmissionFormFee.getText();
            }
            if(jC_AdmissionFee.isSelected() == false) {
                aM.AdmissionFee = "0.0";
            } else {
                aM.AdmissionFee = jTF_AdmissionFee.getText();
                
                paymentDataForPaySlip[0][1] = jC_AdmissionFee.getText();
                paymentDataForPaySlip[1][1] = jTF_AdmissionFee.getText();
            }
            if(jC_MonthlyFee.isSelected() == false) {
                aM.MonthlyFee = "0.0";
            } else {
                aM.MonthlyFee = jTF_MonthlyFee.getText();
                
                paymentDataForPaySlip[0][2] = jC_MonthlyFee.getText();
                paymentDataForPaySlip[1][2] = jTF_MonthlyFee.getText();
            }
            if(jC_SemesterFee.isSelected() == false) {
                aM.SemesterFee = "0.0";
            } else {
                aM.SemesterFee = jTF_SemesterFee.getText();
                
                paymentDataForPaySlip[0][3] =jC_SemesterFee.getText();
                paymentDataForPaySlip[1][3] = jTF_SemesterFee.getText();
            }
            if(jC_YearlyFee.isSelected() == false) {
                aM.YearlyFee = "0.0";
            } else {
                aM.YearlyFee = jTF_YearlyFee.getText();
                
                paymentDataForPaySlip[0][4] = jC_YearlyFee.getText();
                paymentDataForPaySlip[1][4] = jTF_YearlyFee.getText();
            }
            if(jC_IdCardFee.isSelected() == false) {
                aM.IdCardFee = "0.0";
            } else {
                aM.IdCardFee = jTF_IdCardFee.getText();
                
                paymentDataForPaySlip[0][5] = jC_IdCardFee.getText();
                paymentDataForPaySlip[1][5] = jTF_IdCardFee.getText();
            }
            if(jC_UniformFee.isSelected() == false) {
                aM.UniformFee = "0.0";
            } else {
                aM.UniformFee = jTF_UniformFee.getText();
                
                paymentDataForPaySlip[0][6] = jC_UniformFee.getText();
                paymentDataForPaySlip[1][6] = jTF_UniformFee.getText();
            }
            if(jC_ScoutFee.isSelected() == false) {
                aM.ScoutFee = "0.0";
            } else {
                aM.ScoutFee = jTF_ScoutFee.getText();
                
                paymentDataForPaySlip[0][7] = jC_ScoutFee.getText();
                paymentDataForPaySlip[1][7] = jTF_ScoutFee.getText();
            }
            if(jC_SportsFee.isSelected() == false) {
                aM.SportsFee = "0.0";
            } else {
                aM.SportsFee = jTF_SportsFee.getText();
                
                paymentDataForPaySlip[0][8] = jC_SportsFee.getText();
                paymentDataForPaySlip[1][8] = jTF_SportsFee.getText();
            }
            if(jC_PenaltyFee.isSelected() == false) {
                aM.PenaltyFee = "0.0";
            } else {
                aM.PenaltyFee = jTF_PenaltyFee.getText();
                
                paymentDataForPaySlip[0][9] = jC_PenaltyFee.getText();
                paymentDataForPaySlip[1][9] = jTF_PenaltyFee.getText();
            }
            if(jC_PicnicFee.isSelected() == false) {
                aM.PicnicFee = "0.0";
            } else {
                aM.PicnicFee = jTF_PicnicFee.getText();
                
                paymentDataForPaySlip[0][10] = jC_PicnicFee.getText();
                paymentDataForPaySlip[1][10] = jTF_PicnicFee.getText();
            }
            if(jC_StudyTourFee.isSelected() == false) {
                aM.StudyTourFee = "0.0";
            } else {
                aM.StudyTourFee = jTF_StudyTourFee.getText();
                
                paymentDataForPaySlip[0][11] = jC_StudyTourFee.getText();
                paymentDataForPaySlip[1][11] = jTF_StudyTourFee.getText();
            }
            if(jC_CeremonyFee.isSelected() == false) {
                aM.CeremonyFee = "0.0";
            } else {
                aM.CeremonyFee = jTF_CeremonyFee.getText();
                
                paymentDataForPaySlip[0][12] = jC_CeremonyFee.getText();
                paymentDataForPaySlip[1][12] = jTF_CeremonyFee.getText();
            }
            if(jC_TransferFee.isSelected() == false) {
                aM.TransferFee = "0.0";
            } else {
                aM.TransferFee = jTF_TransferFee.getText();
                
                paymentDataForPaySlip[0][13] = jC_TransferFee.getText();
                paymentDataForPaySlip[1][13] = jTF_TransferFee.getText();
            }
            if(jC_ExamFee.isSelected() == false) {
                aM.ExamFee = "0.0";
            } else {
                aM.ExamFee = jTF_ExamFee.getText();
                
                paymentDataForPaySlip[0][14] = jC_ExamFee.getText();
                paymentDataForPaySlip[1][14] = jTF_ExamFee.getText();
            }
            if(jC_ExamCenterFee.isSelected() == false) {
                aM.ExamCenterFee = "0.0";
            } else {
                aM.ExamCenterFee = jTF_ExamCenterFee.getText();
                
                paymentDataForPaySlip[0][15] = jC_ExamCenterFee.getText();
                paymentDataForPaySlip[1][15] = jTF_ExamCenterFee.getText();
            }
            if(jC_BoardFee.isSelected() == false) {
                aM.BoardFee = "0.0";
            } else {
                aM.BoardFee = jTF_BoardFee.getText();
                
                paymentDataForPaySlip[0][16] = jC_BoardFee.getText();
                paymentDataForPaySlip[1][16] = jTF_BoardFee.getText();
            }
            if(jC_CharacterCertificateFee.isSelected() == false) {
                aM.CharacterCertificateFee = "0.0";
            } else {
                aM.CharacterCertificateFee = jTF_CharacterCertificateFee.getText();
                
                paymentDataForPaySlip[0][17] = jC_CharacterCertificateFee.getText();
                paymentDataForPaySlip[1][17] = jTF_CharacterCertificateFee.getText();
            }
            if(jC_TransferCertificateFee.isSelected() == false) {
                aM.TransferCertificateFee = "0.0";
            } else {
                aM.TransferCertificateFee = jTF_TransferCertificateFee.getText();
                
                paymentDataForPaySlip[0][18] = jC_TransferCertificateFee.getText();
                paymentDataForPaySlip[1][18] = jTF_TransferCertificateFee.getText();
            }
            if(jC_TranscriptsFee.isSelected() == false) {
                aM.TranscriptsFee = "0.0";
            } else {
                aM.TranscriptsFee = jTF_TranscriptsFee.getText();
                
                paymentDataForPaySlip[0][19] = jC_TranscriptsFee.getText();
                paymentDataForPaySlip[1][19] = jTF_TranscriptsFee.getText();
            }
            if(jC_MainCertificateFee.isSelected() == false) {
                aM.MainCertificateFee = "0.0";
            } else {
                aM.MainCertificateFee = jTF_MainCertificateFee.getText();
                
                paymentDataForPaySlip[0][20] = jC_MainCertificateFee.getText();
                paymentDataForPaySlip[1][20] = jTF_MainCertificateFee.getText();
            }
            if(jTF_TotalAmount.getText() == null) {
                aM.TotalAmount = "0.0";
            } else {
                aM.TotalAmount = jTF_TotalAmount.getText();
                
                paymentDataForPaySlip[0][21] = "Total Amount";
                paymentDataForPaySlip[1][21] = jTF_TotalAmount.getText();
            }
            String feedBack = aM.StudentFeesValidityCheck();
            if ("Checked!!!".equals(feedBack)) {
                feedBack = aM.SaveStudentPaymentAccount(sqlString);
            }
            JOptionPane.showMessageDialog(this, feedBack);
            RefreshThisForm();
            filePath = aM.DocumentForStudentPaymentSlip(studentInfoForPaySlip, paymentDataForPaySlip);
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
        return filePath;
    }
    
    private void GetCurrentSystemDate() {
        Date currDate = new Date();
        jDC_PaymentDate.setDate(currDate);
    }
    
    private void PopulateAllEmpInfor() throws SQLException {
        aM = new AccountModel();
        ArrayList<EmployeeModel> employees = aM.GetAllDetailsOfEmployees();
        for(EmployeeModel eM : employees) {
            jCB_EmployeeList.addItem(eM.Name);
        }
    }
    
    private void RetrivingStudentData() throws SQLException {
        String sqlString = "SELECT * FROM STUDENTDATASET WHERE STUID = ?";
        LibraryBookModel profileModel = new LibraryBookModel();
        profileModel.SearchId = jTF_StudentId.getText().toUpperCase();
        String feedBack = profileModel.GetStudentDataFromDb(sqlString);
        if ("All Retrive".equals(feedBack)) {
            jTF_StudentId.setText(profileModel.SId);
            jL_StudentName.setText("Name: " + profileModel.Name);
            jL_StudentClass.setText("Class: " + profileModel.Class);
            jL_StudentSection.setText("Section: " + profileModel.Section);
            jL_StudentMajor.setText("Major: " + profileModel.Major);
        }
        
        // For Payment Slip
        studentInfoForPaySlip = new String[5];
        studentInfoForPaySlip[0] = profileModel.SId;
        studentInfoForPaySlip[1] = profileModel.Name;
        studentInfoForPaySlip[2] = profileModel.Class;
        studentInfoForPaySlip[3] = profileModel.Section;
        studentInfoForPaySlip[4] = profileModel.Major;
    }
    
    private void RefreshThisForm() {
        jTF_PaymentId.setText("PAY-" + (autoId.IdGenerator("AccountStuFees")));
        pD = new ProjectDesign();
        pD.phTextField = jTF_StudentId;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Enter Student Id...");
        jL_StudentName.setText("Name of Student");
        jL_StudentClass.setText("Class");
        jL_StudentSection.setText("Section");
        jL_StudentMajor.setText("Major");
        pD.phComboBox = jCB_EmployeeList;
        pD.phComboBox.setSelectedItem("<Select Employee>");
        pD.placeHolder("jComboBox", "FL", "<Select Employee>");
        GetCurrentSystemDate();
        pD.phTextField = jTF_SearchBox;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "Search by Payment Id...");
        jC_AdmissionFormFee.setSelected(false);
        jTF_AdmissionFormFee.setText("");
        jTF_AdmissionFormFee.setEnabled(false);
        jC_AdmissionFee.setSelected(false);
        jTF_AdmissionFee.setText("");
        jTF_AdmissionFee.setEnabled(false);
        jC_MonthlyFee.setSelected(false);
        jTF_MonthlyFee.setText("");
        jTF_MonthlyFee.setEnabled(false);
        jC_SemesterFee.setSelected(false);
        jTF_SemesterFee.setText("");
        jTF_SemesterFee.setEnabled(false);
        jC_YearlyFee.setSelected(false);
        jTF_YearlyFee.setText("");
        jTF_YearlyFee.setEnabled(false);
        jC_IdCardFee.setSelected(false);
        jTF_IdCardFee.setText("");
        jTF_IdCardFee.setEnabled(false);
        jC_UniformFee.setSelected(false);
        jTF_UniformFee.setText("");
        jTF_UniformFee.setEnabled(false);
        jTF_IdCardFee.setEnabled(false);
        jC_ScoutFee.setSelected(false);
        jTF_ScoutFee.setText("");
        jTF_ScoutFee.setEnabled(false);
        jC_SportsFee.setSelected(false);
        jTF_SportsFee.setText("");
        jTF_SportsFee.setEnabled(false);
        jC_PenaltyFee.setSelected(false);
        jTF_PenaltyFee.setText("");
        jTF_PenaltyFee.setEnabled(false);
        jC_PicnicFee.setSelected(false);
        jTF_PicnicFee.setText("");
        jTF_PicnicFee.setEnabled(false);
        jC_StudyTourFee.setSelected(false);
        jTF_StudyTourFee.setText("");
        jTF_StudyTourFee.setEnabled(false);
        jC_CeremonyFee.setSelected(false);
        jTF_CeremonyFee.setText("");
        jTF_CeremonyFee.setEnabled(false);
        jC_TransferFee.setSelected(false);
        jTF_TransferFee.setText("");
        jTF_TransferFee.setEnabled(false);
        jC_ExamFee.setSelected(false);
        jTF_ExamFee.setText("");
        jTF_ExamFee.setEnabled(false);
        jC_ExamCenterFee.setSelected(false);
        jTF_ExamCenterFee.setText("");
        jTF_ExamCenterFee.setEnabled(false);
        jC_BoardFee.setSelected(false);
        jTF_BoardFee.setText("");
        jTF_BoardFee.setEnabled(false);
        jC_CharacterCertificateFee.setSelected(false);
        jTF_CharacterCertificateFee.setText("");
        jTF_CharacterCertificateFee.setEnabled(false);
        jC_TransferCertificateFee.setSelected(false);
        jTF_TransferCertificateFee.setText("");
        jTF_TransferCertificateFee.setEnabled(false);
        jC_TranscriptsFee.setSelected(false);
        jTF_TranscriptsFee.setText("");
        jTF_TranscriptsFee.setEnabled(false);
        jC_MainCertificateFee.setSelected(false);
        jTF_MainCertificateFee.setText("");
        jTF_MainCertificateFee.setEnabled(false);
        jTF_TotalAmount.setText("");
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void jC_AdmissionFormFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_AdmissionFormFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_AdmissionFormFee;
            aM.demoTextFieldOfCheck = jTF_AdmissionFormFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_AdmissionFormFeeActionPerformed

    private void jC_AdmissionFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_AdmissionFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_AdmissionFee;
            aM.demoTextFieldOfCheck = jTF_AdmissionFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_AdmissionFeeActionPerformed

    private void jC_MonthlyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_MonthlyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_MonthlyFee;
            aM.demoTextFieldOfCheck = jTF_MonthlyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_MonthlyFeeActionPerformed

    private void jC_SemesterFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_SemesterFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_SemesterFee;
            aM.demoTextFieldOfCheck = jTF_SemesterFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_SemesterFeeActionPerformed

    private void jC_YearlyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_YearlyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_YearlyFee;
            aM.demoTextFieldOfCheck = jTF_YearlyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_YearlyFeeActionPerformed

    private void jC_IdCardFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_IdCardFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_IdCardFee;
            aM.demoTextFieldOfCheck = jTF_IdCardFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_IdCardFeeActionPerformed

    private void jC_UniformFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_UniformFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_UniformFee;
            aM.demoTextFieldOfCheck = jTF_UniformFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_UniformFeeActionPerformed

    private void jC_ScoutFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_ScoutFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_ScoutFee;
            aM.demoTextFieldOfCheck = jTF_ScoutFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_ScoutFeeActionPerformed

    private void jC_SportsFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_SportsFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_SportsFee;
            aM.demoTextFieldOfCheck = jTF_SportsFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_SportsFeeActionPerformed

    private void jC_PenaltyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_PenaltyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_PenaltyFee;
            aM.demoTextFieldOfCheck = jTF_PenaltyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_PenaltyFeeActionPerformed

    private void jC_PicnicFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_PicnicFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_PicnicFee;
            aM.demoTextFieldOfCheck = jTF_PicnicFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_PicnicFeeActionPerformed

    private void jC_StudyTourFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_StudyTourFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_StudyTourFee;
            aM.demoTextFieldOfCheck = jTF_StudyTourFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_StudyTourFeeActionPerformed

    private void jC_CeremonyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_CeremonyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_CeremonyFee;
            aM.demoTextFieldOfCheck = jTF_CeremonyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_CeremonyFeeActionPerformed

    private void jC_TransferFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_TransferFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_TransferFee;
            aM.demoTextFieldOfCheck = jTF_TransferFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jC_TransferFeeActionPerformed

    private void jC_ExamFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_ExamFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_ExamFee;
            aM.demoTextFieldOfCheck = jTF_ExamFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_ExamFeeActionPerformed

    private void jC_ExamCenterFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_ExamCenterFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_ExamCenterFee;
            aM.demoTextFieldOfCheck = jTF_ExamCenterFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_ExamCenterFeeActionPerformed

    private void jC_BoardFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_BoardFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_BoardFee;
            aM.demoTextFieldOfCheck = jTF_BoardFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_BoardFeeActionPerformed

    private void jC_CharacterCertificateFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_CharacterCertificateFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_CharacterCertificateFee;
            aM.demoTextFieldOfCheck = jTF_CharacterCertificateFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_CharacterCertificateFeeActionPerformed

    private void jC_TransferCertificateFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_TransferCertificateFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_TransferCertificateFee;
            aM.demoTextFieldOfCheck = jTF_TransferCertificateFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_TransferCertificateFeeActionPerformed

    private void jC_TranscriptsFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_TranscriptsFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_TranscriptsFee;
            aM.demoTextFieldOfCheck = jTF_TranscriptsFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_TranscriptsFeeActionPerformed

    private void jC_MainCertificateFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_MainCertificateFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoCheckBox = jC_MainCertificateFee;
            aM.demoTextFieldOfCheck = jTF_MainCertificateFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateCheckBoxCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jC_MainCertificateFeeActionPerformed

    private void jTF_AdmissionFormFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_AdmissionFormFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_AdmissionFormFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_AdmissionFormFeeActionPerformed

    private void jTF_AdmissionFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_AdmissionFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_AdmissionFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_AdmissionFeeActionPerformed

    private void jTF_MonthlyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_MonthlyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_MonthlyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_MonthlyFeeActionPerformed

    private void jTF_SemesterFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_SemesterFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_SemesterFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_SemesterFeeActionPerformed

    private void jTF_YearlyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_YearlyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_YearlyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_YearlyFeeActionPerformed

    private void jTF_IdCardFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_IdCardFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_IdCardFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_IdCardFeeActionPerformed

    private void jTF_UniformFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_UniformFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_UniformFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_UniformFeeActionPerformed

    private void jTF_ScoutFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_ScoutFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_ScoutFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_ScoutFeeActionPerformed

    private void jTF_SportsFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_SportsFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_SportsFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_SportsFeeActionPerformed

    private void jTF_PenaltyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_PenaltyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_PenaltyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_PenaltyFeeActionPerformed

    private void jTF_PicnicFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_PicnicFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_PicnicFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_PicnicFeeActionPerformed

    private void jTF_StudyTourFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_StudyTourFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_StudyTourFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_StudyTourFeeActionPerformed

    private void jTF_CeremonyFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_CeremonyFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_CeremonyFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_CeremonyFeeActionPerformed

    private void jTF_TransferFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_TransferFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_TransferFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_TransferFeeActionPerformed

    private void jTF_ExamFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_ExamFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_ExamFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_ExamFeeActionPerformed

    private void jTF_ExamCenterFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_ExamCenterFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_ExamCenterFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_ExamCenterFeeActionPerformed

    private void jTF_BoardFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_BoardFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_BoardFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_BoardFeeActionPerformed

    private void jTF_CharacterCertificateFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_CharacterCertificateFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_CharacterCertificateFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_CharacterCertificateFeeActionPerformed

    private void jTF_TransferCertificateFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_TransferCertificateFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_TransferCertificateFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_TransferCertificateFeeActionPerformed

    private void jTF_TranscriptsFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_TranscriptsFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_TranscriptsFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_TranscriptsFeeActionPerformed

    private void jTF_MainCertificateFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_MainCertificateFeeActionPerformed
        try {
            aM = new AccountModel();
            aM.demoTextFieldOfCheck = jTF_MainCertificateFee;
            aM.demoTextFieldOfTotal = jTF_TotalAmount;
            aM.InitiateTextFieldCommand();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_MainCertificateFeeActionPerformed

    private void jTF_StudentIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_StudentIdFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jTF_StudentId;
        pD.placeHolder("jTextField", "FG", "Enter Student Id...");
    }//GEN-LAST:event_jTF_StudentIdFocusGained

    private void jTF_StudentIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_StudentIdFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jTF_StudentId;
        pD.placeHolder("jTextField", "FL", "Enter Student Id...");
    }//GEN-LAST:event_jTF_StudentIdFocusLost

    private void jTF_SearchBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_SearchBoxFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jTF_SearchBox;
        pD.placeHolder("jTextField", "FG", "Search by Payment Id...");
    }//GEN-LAST:event_jTF_SearchBoxFocusGained

    private void jTF_SearchBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_SearchBoxFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jTF_SearchBox;
        pD.placeHolder("jTextField", "FL", "Search by Payment Id...");
    }//GEN-LAST:event_jTF_SearchBoxFocusLost

    private void jTF_StudentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_StudentIdActionPerformed
        try {
            RetrivingStudentData();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_StudentIdActionPerformed

    private void jB_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_SaveActionPerformed
        filePath = SaveStudentPaymentInfo();
        if (Desktop.isDesktopSupported()) {
            try {
                File generateFile = new File(filePath);
                Desktop.getDesktop().open(generateFile);
            } catch (IOException ex) {
                Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB_SaveActionPerformed

    private void jB_ReloadPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_ReloadPageActionPerformed
        RefreshThisForm();
    }//GEN-LAST:event_jB_ReloadPageActionPerformed

    private void jTF_SearchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_SearchBoxActionPerformed
        try {
            String sqlString = "SELECT * FROM PAYMENTACCOUNT WHERE PAYID = ?";
            
            aM = new AccountModel();
            aM.SearchBoxId = jTF_SearchBox.getText();
            String feedBack = aM.SearchStudentPaymentAccount(sqlString);
            if ("All Retrive".equals(feedBack)) {
                jTF_PaymentId.setText(aM.Id);
                jDC_PaymentDate.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(aM.Date));
                for (int i = 0; i < jCB_EmployeeList.getModel().getSize(); i++) {
                    if (aM.Name.equals(jCB_EmployeeList.getModel().getElementAt(i).toUpperCase())) {
                        jCB_EmployeeList.setSelectedIndex(i);
                        break;
                    }
                }
                jTF_StudentId.setText(aM.StudentId);
                RetrivingStudentData();
                if (!aM.AdmissionFormFee.equals("0.0")) {
                    jC_AdmissionFormFee.setSelected(true);
                    jTF_AdmissionFormFee.setEnabled(true);
                    jTF_AdmissionFormFee.setText(aM.AdmissionFormFee);
                }
                if (!aM.AdmissionFee.equals("0.0")) {
                    jC_AdmissionFee.setSelected(true);
                    jTF_AdmissionFee.setEnabled(true);
                    jTF_AdmissionFee.setText(aM.AdmissionFee);
                }
                if (!aM.MonthlyFee.equals("0.0")) {
                    jC_MonthlyFee.setSelected(true);
                    jTF_MonthlyFee.setEnabled(true);
                    jTF_MonthlyFee.setText(aM.MonthlyFee);
                }
                if (!aM.SemesterFee.equals("0.0")) {
                    jC_SemesterFee.setSelected(true);
                    jTF_SemesterFee.setEnabled(true);
                    jTF_SemesterFee.setText(aM.SemesterFee);
                }
                if (!aM.YearlyFee.equals("0.0")) {
                    jC_YearlyFee.setSelected(true);
                    jTF_YearlyFee.setEnabled(true);
                    jTF_YearlyFee.setText(aM.YearlyFee);
                }
                if (!aM.IdCardFee.equals("0.0")) {
                    jC_IdCardFee.setSelected(true);
                    jTF_IdCardFee.setEnabled(true);
                    jTF_IdCardFee.setText(aM.IdCardFee);
                }
                if (!aM.UniformFee.equals("0.0")) {
                    jC_UniformFee.setSelected(true);
                    jTF_UniformFee.setEnabled(true);
                    jTF_UniformFee.setText(aM.UniformFee);
                }
                if (!aM.ScoutFee.equals("0.0")) {
                    jC_ScoutFee.setSelected(true);
                    jTF_ScoutFee.setEnabled(true);
                    jTF_ScoutFee.setText(aM.ScoutFee);
                }
                if (!aM.SportsFee.equals("0.0")) {
                    jC_SportsFee.setSelected(true);
                    jTF_SportsFee.setEnabled(true);
                    jTF_SportsFee.setText(aM.SportsFee);
                }
                if (!aM.PenaltyFee.equals("0.0")) {
                    jC_PenaltyFee.setSelected(true);
                    jTF_PenaltyFee.setEnabled(true);
                    jTF_PenaltyFee.setText(aM.PenaltyFee);
                }
                if (!aM.PicnicFee.equals("0.0")) {
                    jC_PicnicFee.setSelected(true);
                    jTF_PicnicFee.setEnabled(true);
                    jTF_PicnicFee.setText(aM.PicnicFee);
                }
                if (!aM.StudyTourFee.equals("0.0")) {
                    jC_StudyTourFee.setSelected(true);
                    jTF_StudyTourFee.setEnabled(true);
                    jTF_StudyTourFee.setText(aM.StudyTourFee);
                }
                if (!aM.CeremonyFee.equals("0.0")) {
                    jC_CeremonyFee.setSelected(true);
                    jTF_CeremonyFee.setEnabled(true);
                    jTF_CeremonyFee.setText(aM.CeremonyFee);
                }
                if (!aM.TransferFee.equals("0.0")) {
                    jC_TransferFee.setSelected(true);
                    jTF_TransferFee.setEnabled(true);
                    jTF_TransferFee.setText(aM.TransferFee);
                }
                if (!aM.ExamFee.equals("0.0")) {
                    jC_ExamFee.setSelected(true);
                    jTF_ExamFee.setEnabled(true);
                    jTF_ExamFee.setText(aM.ExamFee);
                }
                if (!aM.ExamCenterFee.equals("0.0")) {
                    jC_ExamCenterFee.setSelected(true);
                    jTF_ExamCenterFee.setEnabled(true);
                    jTF_ExamCenterFee.setText(aM.ExamCenterFee);
                }
                if (!aM.BoardFee.equals("0.0")) {
                    jC_BoardFee.setSelected(true);
                    jTF_BoardFee.setEnabled(true);
                    jTF_BoardFee.setText(aM.BoardFee);
                }
                if (!aM.CharacterCertificateFee.equals("0.0")) {
                    jC_CharacterCertificateFee.setSelected(true);
                    jTF_CharacterCertificateFee.setEnabled(true);
                    jTF_CharacterCertificateFee.setText(aM.CharacterCertificateFee);
                }
                if (!aM.TransferCertificateFee.equals("0.0")) {
                    jC_TransferCertificateFee.setSelected(true);
                    jTF_TransferCertificateFee.setEnabled(true);
                    jTF_TransferCertificateFee.setText(aM.TransferCertificateFee);
                }
                if (!aM.TranscriptsFee.equals("0.0")) {
                    jC_TranscriptsFee.setSelected(true);
                    jTF_TranscriptsFee.setEnabled(true);
                    jTF_TranscriptsFee.setText(aM.TranscriptsFee);
                }
                if (!aM.MainCertificateFee.equals("0.0")) {
                    jC_MainCertificateFee.setSelected(true);
                    jTF_MainCertificateFee.setEnabled(true);
                    jTF_MainCertificateFee.setText(aM.MainCertificateFee);
                }
                jTF_TotalAmount.setText(aM.TotalAmount);
                JOptionPane.showMessageDialog(this, "All Information Retrived...");
            }
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTF_SearchBoxActionPerformed

    private void jB_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_UpdateActionPerformed
        try {
            String sqlString = "UPDATE PAYMENTACCOUNT SET PAYID = ?, PAYDATE = ?, PAYAUTHORIZE = ?, PAYSTUID = ?,"
                    + "PAYADMISSIONFORMFEE = ?, PAYADMISSIONFEE = ?, PAYMONTHFEE = ?, PAYSEMESTERFEE = ?, PAYYEARFEE = ?,"
                    + "PAYIDCARDFEE = ?, PAYUNIFORMFEE = ?, PAYSCOUTFEE = ?, PAYSPORTSFEE = ?, PAYPENALTYFEE = ?, PAYPICNICFEE = ?,"
                    + "PAYSTUDYTOUR = ?, PAYCEREMONY = ?, PAYTRANSFERFEE = ?, PAYEXAMFEE = ?, PAYEXAMCENTERFEE = ?, PAYBOARDFEE = ?,"
                    + "PAYCCFEE = ?, PAYTCFEE = ?, PAYTRANSCRIPTSFEE = ?, PAYMCFEE = ?, PAYTOTALAMOUNT = ? WHERE PAYID = ?";
            aM = new AccountModel();
            aM.Id = jTF_PaymentId.getText().toUpperCase();
            aM.Date = ((JTextField) jDC_PaymentDate.getDateEditor().getUiComponent()).getText();
            aM.Name = jCB_EmployeeList.getSelectedItem().toString().toUpperCase();
            aM.StudentId = jTF_StudentId.getText().toUpperCase();
            if(jC_AdmissionFormFee.isSelected() == false) {
                aM.AdmissionFormFee = "0.0";
            } else {
                aM.AdmissionFormFee = jTF_AdmissionFormFee.getText();
            }
            if(jC_AdmissionFee.isSelected() == false) {
                aM.AdmissionFee = "0.0";
            } else {
                aM.AdmissionFee = jTF_AdmissionFee.getText();
            }
            if(jC_MonthlyFee.isSelected() == false) {
                aM.MonthlyFee = "0.0";
            } else {
                aM.MonthlyFee = jTF_MonthlyFee.getText();
            }
            if(jC_SemesterFee.isSelected() == false) {
                aM.SemesterFee = "0.0";
            } else {
                aM.SemesterFee = jTF_SemesterFee.getText();
            }
            if(jC_YearlyFee.isSelected() == false) {
                aM.YearlyFee = "0.0";
            } else {
                aM.YearlyFee = jTF_YearlyFee.getText();
            }
            if(jC_IdCardFee.isSelected() == false) {
                aM.IdCardFee = "0.0";
            } else {
                aM.IdCardFee = jTF_IdCardFee.getText();
            }
            if(jC_UniformFee.isSelected() == false) {
                aM.UniformFee = "0.0";
            } else {
                aM.UniformFee = jTF_UniformFee.getText();
            }
            if(jC_ScoutFee.isSelected() == false) {
                aM.ScoutFee = "0.0";
            } else {
                aM.ScoutFee = jTF_ScoutFee.getText();
            }
            if(jC_SportsFee.isSelected() == false) {
                aM.SportsFee = "0.0";
            } else {
                aM.SportsFee = jTF_SportsFee.getText();
            }
            if(jC_PenaltyFee.isSelected() == false) {
                aM.PenaltyFee = "0.0";
            } else {
                aM.PenaltyFee = jTF_PenaltyFee.getText();
            }
            if(jC_PicnicFee.isSelected() == false) {
                aM.PicnicFee = "0.0";
            } else {
                aM.PicnicFee = jTF_PicnicFee.getText();
            }
            if(jC_StudyTourFee.isSelected() == false) {
                aM.StudyTourFee = "0.0";
            } else {
                aM.StudyTourFee = jTF_StudyTourFee.getText();
            }
            if(jC_CeremonyFee.isSelected() == false) {
                aM.CeremonyFee = "0.0";
            } else {
                aM.CeremonyFee = jTF_CeremonyFee.getText();
            }
            if(jC_TransferFee.isSelected() == false) {
                aM.TransferFee = "0.0";
            } else {
                aM.TransferFee = jTF_TransferFee.getText();
            }
            if(jC_ExamFee.isSelected() == false) {
                aM.ExamFee = "0.0";
            } else {
                aM.ExamFee = jTF_ExamFee.getText();
            }
            if(jC_ExamCenterFee.isSelected() == false) {
                aM.ExamCenterFee = "0.0";
            } else {
                aM.ExamCenterFee = jTF_ExamCenterFee.getText();
            }
            if(jC_BoardFee.isSelected() == false) {
                aM.BoardFee = "0.0";
            } else {
                aM.BoardFee = jTF_BoardFee.getText();
            }
            if(jC_CharacterCertificateFee.isSelected() == false) {
                aM.CharacterCertificateFee = "0.0";
            } else {
                aM.CharacterCertificateFee = jTF_CharacterCertificateFee.getText();
            }
            if(jC_TransferCertificateFee.isSelected() == false) {
                aM.TransferCertificateFee = "0.0";
            } else {
                aM.TransferCertificateFee = jTF_TransferCertificateFee.getText();
            }
            if(jC_TranscriptsFee.isSelected() == false) {
                aM.TranscriptsFee = "0.0";
            } else {
                aM.TranscriptsFee = jTF_TranscriptsFee.getText();
            }
            if(jC_MainCertificateFee.isSelected() == false) {
                aM.MainCertificateFee = "0.0";
            } else {
                aM.MainCertificateFee = jTF_MainCertificateFee.getText();
            }
            if(jTF_TotalAmount.getText() == null) {
                aM.TotalAmount = "0.0";
            } else {
                aM.TotalAmount = jTF_TotalAmount.getText();
            }

            aM.SearchBoxId = jTF_SearchBox.getText().toUpperCase();

            String feedBack = aM.StudentFeesValidityCheck();
            if ("Checked!!!".equals(feedBack)) {
                feedBack = aM.UpdateStudentPaymentAccount(sqlString);
            }
            JOptionPane.showMessageDialog(this, feedBack);
            RefreshThisForm();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_UpdateActionPerformed

    private void jB_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_DeleteActionPerformed
        try {
            String sqlString = "DELETE FROM PAYMENTACCOUNT WHERE PAYID = ?";
            aM = new AccountModel();
            aM.SearchBoxId = jTF_SearchBox.getText().toUpperCase();
            String feedBack = aM.DeleteStudentPaymentAccount(sqlString);
            JOptionPane.showMessageDialog(this, feedBack);
            RefreshThisForm();
        } catch (SQLException ex) {
            Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_DeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountStuFees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new AccountStuFees().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(AccountStuFees.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Delete;
    private javax.swing.JButton jB_ReloadPage;
    private javax.swing.JButton jB_Save;
    private javax.swing.JButton jB_Update;
    private javax.swing.JComboBox<String> jCB_EmployeeList;
    private javax.swing.JCheckBox jC_AdmissionFee;
    private javax.swing.JCheckBox jC_AdmissionFormFee;
    private javax.swing.JCheckBox jC_BoardFee;
    private javax.swing.JCheckBox jC_CeremonyFee;
    private javax.swing.JCheckBox jC_CharacterCertificateFee;
    private javax.swing.JCheckBox jC_ExamCenterFee;
    private javax.swing.JCheckBox jC_ExamFee;
    private javax.swing.JCheckBox jC_IdCardFee;
    private javax.swing.JCheckBox jC_MainCertificateFee;
    private javax.swing.JCheckBox jC_MonthlyFee;
    private javax.swing.JCheckBox jC_PenaltyFee;
    private javax.swing.JCheckBox jC_PicnicFee;
    private javax.swing.JCheckBox jC_ScoutFee;
    private javax.swing.JCheckBox jC_SemesterFee;
    private javax.swing.JCheckBox jC_SportsFee;
    private javax.swing.JCheckBox jC_StudyTourFee;
    private javax.swing.JCheckBox jC_TranscriptsFee;
    private javax.swing.JCheckBox jC_TransferCertificateFee;
    private javax.swing.JCheckBox jC_TransferFee;
    private javax.swing.JCheckBox jC_UniformFee;
    private javax.swing.JCheckBox jC_YearlyFee;
    private com.toedter.calendar.JDateChooser jDC_PaymentDate;
    private javax.swing.JLabel jL_BDT;
    private javax.swing.JLabel jL_SelectPaymentTypes;
    private javax.swing.JLabel jL_StudentClass;
    private javax.swing.JLabel jL_StudentMajor;
    private javax.swing.JLabel jL_StudentName;
    private javax.swing.JLabel jL_StudentSection;
    private javax.swing.JLabel jL_TotalAmount;
    private javax.swing.JLabel jL_nameOfSchool;
    private javax.swing.JLabel jL_schoolAddress;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTextField jTF_AdmissionFee;
    private javax.swing.JTextField jTF_AdmissionFormFee;
    private javax.swing.JTextField jTF_BoardFee;
    private javax.swing.JTextField jTF_CeremonyFee;
    private javax.swing.JTextField jTF_CharacterCertificateFee;
    private javax.swing.JTextField jTF_ExamCenterFee;
    private javax.swing.JTextField jTF_ExamFee;
    private javax.swing.JTextField jTF_IdCardFee;
    private javax.swing.JTextField jTF_MainCertificateFee;
    private javax.swing.JTextField jTF_MonthlyFee;
    private javax.swing.JTextField jTF_PaymentId;
    private javax.swing.JTextField jTF_PenaltyFee;
    private javax.swing.JTextField jTF_PicnicFee;
    private javax.swing.JTextField jTF_ScoutFee;
    private javax.swing.JTextField jTF_SearchBox;
    private javax.swing.JTextField jTF_SemesterFee;
    private javax.swing.JTextField jTF_SportsFee;
    private javax.swing.JTextField jTF_StudentId;
    private javax.swing.JTextField jTF_StudyTourFee;
    private javax.swing.JTextField jTF_TotalAmount;
    private javax.swing.JTextField jTF_TranscriptsFee;
    private javax.swing.JTextField jTF_TransferCertificateFee;
    private javax.swing.JTextField jTF_TransferFee;
    private javax.swing.JTextField jTF_UniformFee;
    private javax.swing.JTextField jTF_YearlyFee;
    // End of variables declaration//GEN-END:variables
}
package UIs;

import Classes.AutomaticIdGenerator;
import Classes.ImageModel;
import Classes.TeachersModel;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class ProfileTeacherAdd extends javax.swing.JFrame {
    AutomaticIdGenerator autoId;
    TeachersModel profileModel;
    ImageModel imageModel = new ImageModel();

    public ProfileTeacherAdd() throws SQLException {
        this.autoId = new AutomaticIdGenerator();
        initComponents();
        jT_teacherId.setText("TEA-" + (autoId.IdGenerator("ProfileTeacherAdd")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMain = new javax.swing.JPanel();
        panelSearch = new javax.swing.JPanel();
        jT_searchBox = new javax.swing.JTextField();
        jB_searching = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        panelControls = new javax.swing.JPanel();
        jB_update = new javax.swing.JButton();
        jB_save = new javax.swing.JButton();
        jB_refresh = new javax.swing.JButton();
        jB_delete = new javax.swing.JButton();
        panelFundamental = new javax.swing.JPanel();
        jL_teacherName = new javax.swing.JLabel();
        scrlTAddr = new javax.swing.JScrollPane();
        jTA_temporaryAddr = new javax.swing.JTextArea();
        jL_eduQualification = new javax.swing.JLabel();
        jL_dateOfBirth = new javax.swing.JLabel();
        jL_teacherPhoto = new javax.swing.JLabel();
        scrlOtherQua = new javax.swing.JScrollPane();
        jTA_otherQualification = new javax.swing.JTextArea();
        jC_department = new javax.swing.JComboBox<>();
        jL_contactNo = new javax.swing.JLabel();
        jT_teacherId = new javax.swing.JTextField();
        jC_bloodType = new javax.swing.JComboBox<>();
        scrlTAddr1 = new javax.swing.JScrollPane();
        txtAreaTAddr1 = new javax.swing.JTextArea();
        scrlOtherQua1 = new javax.swing.JScrollPane();
        txtAreaOtherQua1 = new javax.swing.JTextArea();
        scrlPAddr = new javax.swing.JScrollPane();
        jTA_parmanentAddr = new javax.swing.JTextArea();
        jL_parmanentAddr = new javax.swing.JLabel();
        scrlEduQua = new javax.swing.JScrollPane();
        jTA_eduQualification = new javax.swing.JTextArea();
        scrlPAddr1 = new javax.swing.JScrollPane();
        txtAreaPAddr1 = new javax.swing.JTextArea();
        jL_temporaryAddr = new javax.swing.JLabel();
        jL_designation = new javax.swing.JLabel();
        jL_department = new javax.swing.JLabel();
        jL_gender = new javax.swing.JLabel();
        scrlEduQua1 = new javax.swing.JScrollPane();
        txtAreaEduQua1 = new javax.swing.JTextArea();
        jL_teacherId = new javax.swing.JLabel();
        jT_contactNo = new javax.swing.JTextField();
        separatorFundamental = new javax.swing.JSeparator();
        jCB_genderMale = new javax.swing.JCheckBox();
        jL_bloodType = new javax.swing.JLabel();
        jL_religion = new javax.swing.JLabel();
        jC_nationality = new javax.swing.JComboBox<>();
        jT_emergencyContactNo = new javax.swing.JTextField();
        jDC_dateOfBirth = new com.toedter.calendar.JDateChooser();
        jC_religion = new javax.swing.JComboBox<>();
        jL_otherQualification = new javax.swing.JLabel();
        jC_designation = new javax.swing.JComboBox<>();
        jL_emergencyContactNo = new javax.swing.JLabel();
        jCB_genderFemale = new javax.swing.JCheckBox();
        jL_nationality = new javax.swing.JLabel();
        jT_teacherName = new javax.swing.JTextField();
        jL_status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Teacher Profile Include");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panelMain.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 204)), "Teacher Profile"));
        panelMain.setToolTipText("Fundamental Information");

        panelSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "Search by Id"));

        jT_searchBox.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_searchBox.setToolTipText("Serach by Id/Roll");

        jB_searching.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_searching.setText("searching...");
        jB_searching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_searchingActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        lblSearch.setText("Teacher Id");

        javax.swing.GroupLayout panelSearchLayout = new javax.swing.GroupLayout(panelSearch);
        panelSearch.setLayout(panelSearchLayout);
        panelSearchLayout.setHorizontalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jT_searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblSearch)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jB_searching)
                .addGap(40, 40, 40))
        );
        panelSearchLayout.setVerticalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jT_searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jB_searching)
                .addContainerGap())
        );

        panelControls.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)), "Controls"));
        panelControls.setToolTipText("Controls");

        jB_update.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_update.setText("Update");
        jB_update.setToolTipText("Update selected student information");
        jB_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_updateActionPerformed(evt);
            }
        });

        jB_save.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_save.setText("Save");
        jB_save.setToolTipText("Save define student information");
        jB_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_saveActionPerformed(evt);
            }
        });

        jB_refresh.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_refresh.setText("Refresh");
        jB_refresh.setToolTipText("Refresh all elements");
        jB_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_refreshActionPerformed(evt);
            }
        });

        jB_delete.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jB_delete.setText("Delete");
        jB_delete.setToolTipText("Delect selected student information");
        jB_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlsLayout = new javax.swing.GroupLayout(panelControls);
        panelControls.setLayout(panelControlsLayout);
        panelControlsLayout.setHorizontalGroup(
            panelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlsLayout.createSequentialGroup()
                .addGroup(panelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelControlsLayout.createSequentialGroup()
                        .addGroup(panelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelControlsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jB_save, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelControlsLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jB_update, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelControlsLayout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jB_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jB_refresh)))
                .addContainerGap())
        );
        panelControlsLayout.setVerticalGroup(
            panelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jB_save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jB_update)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jB_delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jB_refresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelFundamental.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Fundamental Information"));

        jL_teacherName.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_teacherName.setText("Teacher Name");

        jTA_temporaryAddr.setColumns(20);
        jTA_temporaryAddr.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_temporaryAddr.setRows(5);
        jTA_temporaryAddr.setToolTipText("Parmanent Address");
        scrlTAddr.setViewportView(jTA_temporaryAddr);

        jL_eduQualification.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_eduQualification.setText("Educational Qualification");

        jL_dateOfBirth.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_dateOfBirth.setText("Date of Birth");

        jL_teacherPhoto.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_teacherPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_teacherPhoto.setText("<html><body><p style=\"text-align:center;\">Teacher<br\\>Photo</p></body></html>");
        jL_teacherPhoto.setToolTipText("Select a formal photo");
        jL_teacherPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jL_teacherPhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jL_teacherPhotoMouseClicked(evt);
            }
        });

        jTA_otherQualification.setColumns(20);
        jTA_otherQualification.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_otherQualification.setRows(5);
        jTA_otherQualification.setToolTipText("Parmanent Address");
        scrlOtherQua.setViewportView(jTA_otherQualification);

        jC_department.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select>", "Science", "Arts", "Comerce" }));
        jC_department.setToolTipText("Select class for the student");

        jL_contactNo.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_contactNo.setText("Contact No");

        jT_teacherId.setEditable(false);
        jT_teacherId.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_teacherId.setToolTipText("Id/Roll will generate automatically");

        jC_bloodType.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_bloodType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select>", "O−", "O+", "A−", "A+", "B−", "B+", "AB−", "AB+" }));
        jC_bloodType.setToolTipText("Blood Type");

        txtAreaTAddr1.setColumns(20);
        txtAreaTAddr1.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        txtAreaTAddr1.setRows(5);
        txtAreaTAddr1.setToolTipText("Parmanent Address");
        scrlTAddr1.setViewportView(txtAreaTAddr1);

        txtAreaOtherQua1.setColumns(20);
        txtAreaOtherQua1.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        txtAreaOtherQua1.setRows(5);
        txtAreaOtherQua1.setToolTipText("Parmanent Address");
        scrlOtherQua1.setViewportView(txtAreaOtherQua1);

        jTA_parmanentAddr.setColumns(20);
        jTA_parmanentAddr.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_parmanentAddr.setRows(5);
        jTA_parmanentAddr.setToolTipText("Parmanent Address");
        scrlPAddr.setViewportView(jTA_parmanentAddr);

        jL_parmanentAddr.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_parmanentAddr.setText("Parmanent Address");

        jTA_eduQualification.setColumns(20);
        jTA_eduQualification.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jTA_eduQualification.setRows(5);
        jTA_eduQualification.setToolTipText("Parmanent Address");
        scrlEduQua.setViewportView(jTA_eduQualification);

        txtAreaPAddr1.setColumns(20);
        txtAreaPAddr1.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        txtAreaPAddr1.setRows(5);
        txtAreaPAddr1.setToolTipText("Parmanent Address");
        scrlPAddr1.setViewportView(txtAreaPAddr1);

        jL_temporaryAddr.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_temporaryAddr.setText("Temporary Address");

        jL_designation.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_designation.setText("Designation");

        jL_department.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_department.setText("Department");

        jL_gender.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_gender.setText("Gender");

        txtAreaEduQua1.setColumns(20);
        txtAreaEduQua1.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        txtAreaEduQua1.setRows(5);
        txtAreaEduQua1.setToolTipText("Parmanent Address");
        scrlEduQua1.setViewportView(txtAreaEduQua1);

        jL_teacherId.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_teacherId.setText("Teacher Id");

        jT_contactNo.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_contactNo.setToolTipText("Id/Roll will generate automatically");

        separatorFundamental.setBackground(new java.awt.Color(0, 0, 0));

        jCB_genderMale.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jCB_genderMale.setText(" Male");
        jCB_genderMale.setToolTipText("Gender #Male");
        jCB_genderMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_genderMaleActionPerformed(evt);
            }
        });

        jL_bloodType.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_bloodType.setText("Blood Type");

        jL_religion.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_religion.setText("Religion");

        jC_nationality.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_nationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select>", "Afghan", "Albanian", "Algerian", "American", "Andorran", "Angolan", "Antiguans", "Argentinean", "Armenian", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Barbudans", "Batswana", "Belarusian", "Belgian", "Belizean", "Beninese", "Bhutanese", "Bolivian", "Bosnian", "Brazilian", "British", "Bruneian", "Bulgarian", "Burkinabe", "Burmese", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Cape Verdean", "Central African", "Chadian", "Chilean", "Chinese", "Colombian", "Comoran", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Danish", "Djibouti", "Dominican", "Dutch", "East Timorese", "Ecuadorean", "Egyptian", "Emirian", "Equatorial Guinean", "Eritrean", "Estonian", "Ethiopian", "Fijian", "Filipino", "Finnish", "French", "Gabonese", "Gambian", "Georgian", "German", "Ghanaian", "Greek", "Grenadian", "Guatemalan", "Guinea-Bissauan", "Guinean", "Guyanese", "Haitian", "Herzegovinian", "Honduran", "Hungarian", "I-Kiribati", "Icelander", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivorian", "Jamaican", "Japanese", "Jordanian", "Kazakhstani", "Kenyan", "Kittian and Nevisian", "Kuwaiti", "Kyrgyz", "Laotian", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourger", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivian", "Malian", "Maltese", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovan", "Monacan", "Mongolian", "Moroccan", "Mosotho", "Motswana", "Mozambican", "Namibian", "Nauruan", "Nepalese", "New Zealander", "Ni-Vanuatu", "Nicaraguan", "Nigerian", "Nigerien", "North Korean", "Northern Irish", "Norwegian", "Omani", "Pakistani", "Palauan", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Polish", "Portuguese", "Qatari", "Romanian", "Russian", "Rwandan", "Saint Lucian", "Salvadoran", "Samoan", "San Marinese", "Sao Tomean", "Saudi", "Scottish", "Senegalese", "Serbian", "Seychellois", "Sierra Leonean", "Singaporean", "Slovakian", "Slovenian", "Solomon Islander", "Somali", "South African", "South Korean", "Spanish", "Sri Lankan", "Sudanese", "Surinamer", "Swazi", "Swedish", "Swiss", "Syrian", "Taiwanese", "Tajik", "Tanzanian", "Thai", "Togolese", "Tongan", "Trinidadian or Tobagonian", "Tunisian", "Turkish", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbekistani", "Venezuelan", "Vietnamese", "Welsh", "Yemenite", "Zambian", "Zimbabwean" }));
        jC_nationality.setToolTipText("Nationality");

        jT_emergencyContactNo.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_emergencyContactNo.setToolTipText("Id/Roll will generate automatically");

        jDC_dateOfBirth.setDateFormatString("yyyy-MM-dd");
        jDC_dateOfBirth.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N

        jC_religion.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_religion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select>", "Islam", "Christianity", "Hinduism", "Buddhism", "Nonreligious", "Chinese traditional religion", "Primal-indigenous", "African traditional and Diasporic", "Sikhism", "Juche", "Spiritism", "Judaism", "Bahai", "Jainism", "Shinto", "Cao Dai", "Zoroastrianism", "Tenrikyo", "Neo-Paganism", "Unitarian-Universalism" }));
        jC_religion.setToolTipText("Religion");

        jL_otherQualification.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_otherQualification.setText("Other Qualification");

        jC_designation.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jC_designation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select>", "principal", "2nd principal", " ", "<senior management>", "deputy principal", "associate principal", "principal - 2nd deputy", "assistant principal", " ", "<teacher>", "teacher", "teacher - science (Head)", "teacher - arts (Head)", "teacher - commerce (Head)", "careers advisor", " ", "<guidance>", "guidance counsellor", "guidance counsellor Trainee", " ", "<therapists>", "physiotherapist", "occupation Therapist", "speech language therapist" }));
        jC_designation.setToolTipText("Select class for the student");

        jL_emergencyContactNo.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_emergencyContactNo.setText("Emergency Contact No");

        jCB_genderFemale.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jCB_genderFemale.setText(" Female");
        jCB_genderFemale.setToolTipText("Gender #Female");
        jCB_genderFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_genderFemaleActionPerformed(evt);
            }
        });

        jL_nationality.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jL_nationality.setText("Nationality");

        jT_teacherName.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jT_teacherName.setToolTipText("Enter full name of the student");

        javax.swing.GroupLayout panelFundamentalLayout = new javax.swing.GroupLayout(panelFundamental);
        panelFundamental.setLayout(panelFundamentalLayout);
        panelFundamentalLayout.setHorizontalGroup(
            panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFundamentalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(separatorFundamental)
                        .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jC_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelFundamentalLayout.createSequentialGroup()
                                .addComponent(jDC_dateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jCB_genderMale)
                                .addGap(38, 38, 38)
                                .addComponent(jCB_genderFemale))
                            .addGroup(panelFundamentalLayout.createSequentialGroup()
                                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jL_teacherId)
                                        .addComponent(jT_teacherId)
                                        .addComponent(jL_designation)
                                        .addComponent(jC_designation, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(scrlPAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jL_parmanentAddr)
                                    .addComponent(jL_dateOfBirth)
                                    .addComponent(jL_bloodType)
                                    .addComponent(jC_bloodType, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jL_religion)
                                    .addComponent(jL_gender)
                                    .addComponent(jL_temporaryAddr)
                                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                                        .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jL_teacherName)
                                            .addComponent(jT_teacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jL_department)
                                            .addComponent(jC_department, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jL_teacherPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jC_religion, javax.swing.GroupLayout.Alignment.LEADING, 0, 1, Short.MAX_VALUE)
                                        .addComponent(scrlTAddr, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))))
                            .addComponent(jL_nationality)))
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jT_contactNo, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(scrlEduQua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jL_eduQualification, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jL_contactNo))
                        .addGap(26, 26, 26)
                        .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrlOtherQua)
                            .addComponent(jL_otherQualification)
                            .addComponent(jL_emergencyContactNo)
                            .addComponent(jT_emergencyContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panelFundamentalLayout.setVerticalGroup(
            panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFundamentalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jL_teacherId)
                            .addComponent(jL_teacherName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jT_teacherId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jT_teacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelFundamentalLayout.createSequentialGroup()
                                .addComponent(jL_designation)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jC_designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFundamentalLayout.createSequentialGroup()
                                .addComponent(jL_department)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jC_department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jL_teacherPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addComponent(jL_parmanentAddr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrlPAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addComponent(jL_temporaryAddr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrlTAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_dateOfBirth)
                    .addComponent(jL_gender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDC_dateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCB_genderMale)
                        .addComponent(jCB_genderFemale)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_religion)
                    .addComponent(jL_bloodType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jC_bloodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jC_religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addComponent(jL_nationality)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jC_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(separatorFundamental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jL_eduQualification)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrlEduQua, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addComponent(jL_otherQualification)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrlOtherQua, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFundamentalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addComponent(jL_contactNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jT_contactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFundamentalLayout.createSequentialGroup()
                        .addComponent(jL_emergencyContactNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jT_emergencyContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jL_status.setBackground(new java.awt.Color(0, 0, 0));
        jL_status.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jL_status.setForeground(new java.awt.Color(255, 0, 0));
        jL_status.setText("Status...");

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(panelFundamental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(panelControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(jL_status)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(panelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(152, 152, 152)
                        .addComponent(panelControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(panelFundamental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jL_status))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshThisForm() {
        jT_teacherId.setText("TEA-" + (autoId.IdGenerator("ProfileTeacherAdd")));
        jT_teacherName.setText("");
        jL_teacherPhoto.setIcon(null);
        jL_teacherPhoto.setText("<html><body><p style=\"text-align:center;\">Student<br\\>Photo</p></body></html>");
        jL_teacherPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        jC_designation.setSelectedItem("<select>");
        jC_department.setSelectedItem("<select>");
        jTA_parmanentAddr.setText("");
        jTA_temporaryAddr.setText("");
        ((JTextField) jDC_dateOfBirth.getDateEditor().getUiComponent()).setText("");
        jCB_genderMale.setSelected(false);
        jCB_genderFemale.setSelected(false);
        jC_bloodType.setSelectedItem("<select>");
        jC_religion.setSelectedItem("<select>");
        jC_nationality.setSelectedItem("<select>");
        jTA_eduQualification.setText("");
        jTA_otherQualification.setText("");
        jT_contactNo.setText("");
        jT_emergencyContactNo.setText("");
        jT_searchBox.setText("");
        jL_status.setText("Status...");
    }
    
    private void jB_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_saveActionPerformed
        try {
            String sqlString = "INSERT INTO TEACHERDATASET(TEAID, TEANAME, TEAPHOTO, TEADESIGNATION"
                    + ", TEADEPARTMENT, TEAPADDRESS, TEATADDRESS, TEADATEOFBIRTH, TEAGENDER"
                    + ", TEABLOODGROUP, TEARELIGION, TEANATIONALITY, TEAEDUQUALIFICATION"
                    + ", TEAOTHERQUALIFICATION, TEACONTACTNO, TEAECONTACTNO) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            profileModel = new TeachersModel();
            profileModel.Id = jT_teacherId.getText().toUpperCase();
            profileModel.Name = jT_teacherName.getText().toUpperCase();
            profileModel.photographInByte = imageModel.ConvertImageToByteArray(jL_teacherPhoto.getIcon());
            profileModel.Designation = jC_designation.getSelectedItem().toString().toUpperCase();
            profileModel.Department = jC_department.getSelectedItem().toString().toUpperCase();
            profileModel.ParmanentAddr = jTA_parmanentAddr.getText().toUpperCase();
            profileModel.TemporaryAddr = jTA_temporaryAddr.getText().toUpperCase();
            profileModel.DateOfBirth = ((JTextField) jDC_dateOfBirth.getDateEditor().getUiComponent()).getText();
            profileModel.Gender = (jCB_genderMale.isSelected()) ? "Male".toUpperCase() : "Female".toUpperCase();
            profileModel.BloodGroup = jC_bloodType.getSelectedItem().toString();
            profileModel.Religion = jC_religion.getSelectedItem().toString().toUpperCase();
            profileModel.Nationality = jC_nationality.getSelectedItem().toString().toUpperCase();
            profileModel.EduQualification = jTA_eduQualification.getText().toUpperCase();
            profileModel.OtherQualification = jTA_otherQualification.getText().toUpperCase();
            profileModel.ContactNo = jT_contactNo.getText();
            profileModel.EmergencyContactNo = jT_emergencyContactNo.getText();
            String feedBack = profileModel.ValidityCheck();
            if ("Checked!!!".equals(feedBack)) {
                feedBack = profileModel.SaveTeaProfile(sqlString);
            }
            JOptionPane.showMessageDialog(this, feedBack);
            jL_status.setText(feedBack);
            refreshThisForm();
        } catch (SQLException ex) {
            Logger.getLogger(ProfileTeacherAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_saveActionPerformed

    private void jB_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_updateActionPerformed
        try {
            String sqlString = "UPDATE TEACHERDATASET SET TEAID = ?, TEANAME = ?, TEAPHOTO = ?, TEADESIGNATION = ?"
                    + ", TEADEPARTMENT = ?, TEAPADDRESS = ?, TEATADDRESS = ?, TEADATEOFBIRTH = ?, TEAGENDER = ?"
                    + ", TEABLOODGROUP = ?, TEARELIGION = ?, TEANATIONALITY = ?, TEAEDUQUALIFICATION = ?"
                    + ", TEAOTHERQUALIFICATION = ?, TEACONTACTNO = ?, TEAECONTACTNO = ? WHERE TEAID = ?";
            profileModel = new TeachersModel();
            profileModel.Id = jT_teacherId.getText().toUpperCase();
            profileModel.Name = jT_teacherName.getText().toUpperCase();
            profileModel.photographInByte = imageModel.ConvertImageToByteArray(jL_teacherPhoto.getIcon());
            profileModel.Designation = jC_designation.getSelectedItem().toString().toUpperCase();
            profileModel.Department = jC_department.getSelectedItem().toString().toUpperCase();
            profileModel.ParmanentAddr = jTA_parmanentAddr.getText().toUpperCase();
            profileModel.TemporaryAddr = jTA_temporaryAddr.getText().toUpperCase();
            profileModel.DateOfBirth = ((JTextField) jDC_dateOfBirth.getDateEditor().getUiComponent()).getText();
            profileModel.Gender = (jCB_genderMale.isSelected()) ? "Male".toUpperCase() : "Female".toUpperCase();
            profileModel.BloodGroup = jC_bloodType.getSelectedItem().toString();
            profileModel.Religion = jC_religion.getSelectedItem().toString().toUpperCase();
            profileModel.Nationality = jC_nationality.getSelectedItem().toString().toUpperCase();
            profileModel.EduQualification = jTA_eduQualification.getText().toUpperCase();
            profileModel.OtherQualification = jTA_otherQualification.getText().toUpperCase();
            profileModel.ContactNo = jT_contactNo.getText().toUpperCase();
            profileModel.EmergencyContactNo = jT_emergencyContactNo.getText().toUpperCase();
            
            profileModel.SearchId = jT_searchBox.getText().toUpperCase();
            
            String feedBack = profileModel.ValidityCheck();
            if ("Checked!!!".equals(feedBack)) {
                feedBack = profileModel.UpdateTeaProfile(sqlString);
            }
            JOptionPane.showMessageDialog(this, feedBack);
            jL_status.setText(feedBack);
            refreshThisForm();
        } catch (SQLException ex) {
            System.out.println("UPDATE Teacher");
            Logger.getLogger(ProfileTeacherAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_updateActionPerformed

    private void jB_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_deleteActionPerformed
        try {
            String sqlString = "DELETE FROM TEACHERDATASET WHERE TEAID = ?";
            profileModel = new TeachersModel();
            profileModel.SearchId = jT_searchBox.getText().toUpperCase();
            String feedBack = profileModel.DeleteTeaProfile(sqlString);
            JOptionPane.showMessageDialog(this, feedBack);
            jL_status.setText(feedBack);
            refreshThisForm();
        } catch (SQLException ex) {
            Logger.getLogger(ProfileTeacherAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_deleteActionPerformed

    private void jB_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_refreshActionPerformed
        refreshThisForm();
    }//GEN-LAST:event_jB_refreshActionPerformed

    private void jB_searchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_searchingActionPerformed
        try {
            String sqlString = "SELECT * FROM TEACHERDATASET WHERE TEAID = ?";
            
            profileModel = new TeachersModel();
            profileModel.SearchId = jT_searchBox.getText();
            String feedBack = profileModel.SearchTeaProfile(sqlString);
            if ("All Retrive".equals(feedBack)) {
                jT_teacherId.setText(profileModel.Id);
                jT_teacherName.setText(profileModel.Name);
                jL_teacherPhoto.setIcon(profileModel.photographInIcon);
                for (int i = 0; i < jC_designation.getModel().getSize(); i++) {
                    if (profileModel.Designation.toLowerCase().equals(jC_designation.getModel().getElementAt(i).toLowerCase())) {
                        jC_designation.setSelectedIndex(i);
                        break;
                    }
                }
                for (int i = 0; i < jC_department.getModel().getSize(); i++) {
                    if (profileModel.Department.toLowerCase().equals(jC_department.getModel().getElementAt(i).toLowerCase())) {
                        jC_department.setSelectedIndex(i);
                        break;
                    }
                }
                jTA_parmanentAddr.setText(profileModel.ParmanentAddr);
                jTA_temporaryAddr.setText(profileModel.TemporaryAddr);
                jDC_dateOfBirth.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(profileModel.DateOfBirth));
                if ("male".equals(profileModel.Gender.toLowerCase())) {
                    jCB_genderMale.setSelected(true);
                } else {
                    jCB_genderFemale.setSelected(true);
                }
                jC_bloodType.setSelectedItem(profileModel.BloodGroup);
                for (int i = 0; i < jC_religion.getModel().getSize(); i++) {
                    if (profileModel.Religion.toLowerCase().equals(jC_religion.getModel().getElementAt(i).toLowerCase())) {
                        jC_religion.setSelectedIndex(i);
                        break;
                    }
                }
                for (int i = 0; i < jC_nationality.getModel().getSize(); i++) {
                    if (profileModel.Nationality.toLowerCase().equals(jC_nationality.getModel().getElementAt(i).toLowerCase())) {
                        jC_nationality.setSelectedIndex(i);
                        break;
                    }
                }
                jTA_eduQualification.setText(profileModel.EduQualification);
                jTA_otherQualification.setText(profileModel.OtherQualification);
                jT_contactNo.setText(profileModel.ContactNo);
                jT_emergencyContactNo.setText(profileModel.EmergencyContactNo);
            }
            jL_teacherPhoto.setText("");
            jL_teacherPhoto.setBorder(javax.swing.BorderFactory.createEmptyBorder());
            jL_status.setText("All Information Retrived...");
        } catch (SQLException ex) {
            Logger.getLogger(ProfileTeacherAdd.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(ProfileTeacherAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jB_searchingActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void jCB_genderMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_genderMaleActionPerformed
        if (jCB_genderMale.isSelected()) {
            jCB_genderFemale.setSelected(false);
        }
    }//GEN-LAST:event_jCB_genderMaleActionPerformed

    private void jCB_genderFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_genderFemaleActionPerformed
        if (jCB_genderFemale.isSelected()) {
            jCB_genderMale.setSelected(false);
        }
    }//GEN-LAST:event_jCB_genderFemaleActionPerformed

    private void jL_teacherPhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jL_teacherPhotoMouseClicked
        imageModel = new ImageModel();
        jL_teacherPhoto.setIcon(imageModel.AddImage());
        jL_teacherPhoto.setText("");
        jL_teacherPhoto.setBorder(javax.swing.BorderFactory.createEmptyBorder());
        jL_status.setText(imageModel.FileURL);
    }//GEN-LAST:event_jL_teacherPhotoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileTeacherAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileTeacherAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileTeacherAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileTeacherAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ProfileTeacherAdd().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ProfileTeacherAdd.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_delete;
    private javax.swing.JButton jB_refresh;
    private javax.swing.JButton jB_save;
    private javax.swing.JButton jB_searching;
    private javax.swing.JButton jB_update;
    private javax.swing.JCheckBox jCB_genderFemale;
    private javax.swing.JCheckBox jCB_genderMale;
    private javax.swing.JComboBox<String> jC_bloodType;
    private javax.swing.JComboBox<String> jC_department;
    private javax.swing.JComboBox<String> jC_designation;
    private javax.swing.JComboBox<String> jC_nationality;
    private javax.swing.JComboBox<String> jC_religion;
    private com.toedter.calendar.JDateChooser jDC_dateOfBirth;
    private javax.swing.JLabel jL_bloodType;
    private javax.swing.JLabel jL_contactNo;
    private javax.swing.JLabel jL_dateOfBirth;
    private javax.swing.JLabel jL_department;
    private javax.swing.JLabel jL_designation;
    private javax.swing.JLabel jL_eduQualification;
    private javax.swing.JLabel jL_emergencyContactNo;
    private javax.swing.JLabel jL_gender;
    private javax.swing.JLabel jL_nationality;
    private javax.swing.JLabel jL_otherQualification;
    private javax.swing.JLabel jL_parmanentAddr;
    private javax.swing.JLabel jL_religion;
    private javax.swing.JLabel jL_status;
    private javax.swing.JLabel jL_teacherId;
    private javax.swing.JLabel jL_teacherName;
    private javax.swing.JLabel jL_teacherPhoto;
    private javax.swing.JLabel jL_temporaryAddr;
    private javax.swing.JTextArea jTA_eduQualification;
    private javax.swing.JTextArea jTA_otherQualification;
    private javax.swing.JTextArea jTA_parmanentAddr;
    private javax.swing.JTextArea jTA_temporaryAddr;
    private javax.swing.JTextField jT_contactNo;
    private javax.swing.JTextField jT_emergencyContactNo;
    private javax.swing.JTextField jT_searchBox;
    private javax.swing.JTextField jT_teacherId;
    private javax.swing.JTextField jT_teacherName;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPanel panelControls;
    private javax.swing.JPanel panelFundamental;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JScrollPane scrlEduQua;
    private javax.swing.JScrollPane scrlEduQua1;
    private javax.swing.JScrollPane scrlOtherQua;
    private javax.swing.JScrollPane scrlOtherQua1;
    private javax.swing.JScrollPane scrlPAddr;
    private javax.swing.JScrollPane scrlPAddr1;
    private javax.swing.JScrollPane scrlTAddr;
    private javax.swing.JScrollPane scrlTAddr1;
    private javax.swing.JSeparator separatorFundamental;
    private javax.swing.JTextArea txtAreaEduQua1;
    private javax.swing.JTextArea txtAreaOtherQua1;
    private javax.swing.JTextArea txtAreaPAddr1;
    private javax.swing.JTextArea txtAreaTAddr1;
    // End of variables declaration//GEN-END:variables
}

package UIs;

import Classes.ProjectDesign;
import Classes.ResultsModel;
import java.awt.Desktop;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ResultsSearch extends javax.swing.JFrame {

    ProjectDesign pD;
    ResultsModel rltModel;
    ResultsCreate rltCreate;
    String[][] columnValues;
    DefaultTableModel searchTableModel;
    int row = 0;
    String[] subjectName = new String[20];
    String[] preTestTotalMark = new String[20];
    String[] testTotalMark = new String[20];
    String[] averageMark = new String[20];
    String[] latterGrade = new String[20];
    String[] GradePoint = new String[20];

    public ResultsSearch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jL_schoolAddress = new javax.swing.JLabel();
        jL_SchoolLogo = new javax.swing.JLabel();
        jL_nameOfSchool = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jB_Reload = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_ResultsData = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jB_GenerateReport = new javax.swing.JButton();
        jTF_StudentId = new javax.swing.JTextField();
        jCB_ClassName = new javax.swing.JComboBox<>();
        jTF_ResultId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel20.setText("Email: example@email.com");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setText("City, State, Zip code");

        jL_schoolAddress.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jL_schoolAddress.setText("School address goes here");

        jL_SchoolLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/School Logo Small.png"))); // NOI18N

        jL_nameOfSchool.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jL_nameOfSchool.setText("NAME OF THE SCHOOL");
        jL_nameOfSchool.setToolTipText("");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel11.setText("Tel: 122-455-7788 | Fax: 444-555-6666");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jL_nameOfSchool)
                    .addComponent(jL_schoolAddress)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel20)
                    .addComponent(jL_SchoolLogo))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jL_SchoolLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jL_nameOfSchool)
                .addGap(5, 5, 5)
                .addComponent(jL_schoolAddress)
                .addGap(5, 5, 5)
                .addComponent(jLabel10)
                .addGap(5, 5, 5)
                .addComponent(jLabel11)
                .addGap(5, 5, 5)
                .addComponent(jLabel20)
                .addContainerGap())
        );

        jB_Reload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Next.jpg"))); // NOI18N
        jB_Reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_ReloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(295, 295, 295)
                .addComponent(jB_Reload, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jB_Reload, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Traditional Arabic", 1, 20)); // NOI18N
        jLabel1.setText("Student Results Queries");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(373, 373, 373)
                .addComponent(jLabel1)
                .addContainerGap(396, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jT_ResultsData.setBackground(new java.awt.Color(251, 222, 222));
        jT_ResultsData.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jT_ResultsData.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jT_ResultsData.setForeground(new java.awt.Color(51, 51, 51));
        jT_ResultsData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Id", "Student Name", "Pre-test Total Mark", "Test Total Mark", "Average Mark", "Latter Grade", "Grade Point"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jT_ResultsData.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jT_ResultsData);

        jSeparator1.setForeground(new java.awt.Color(255, 0, 0));

        jB_GenerateReport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jB_GenerateReport.setText("Generate Report");
        jB_GenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_GenerateReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jB_GenerateReport, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jB_GenerateReport)
                .addContainerGap())
        );

        jTF_StudentId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTF_StudentId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_StudentId.setText("subject id");
        jTF_StudentId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTF_StudentIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_StudentIdFocusLost(evt);
            }
        });
        jTF_StudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_StudentIdActionPerformed(evt);
            }
        });

        jCB_ClassName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCB_ClassName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- class name -", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten" }));
        jCB_ClassName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_ClassNameItemStateChanged(evt);
            }
        });
        jCB_ClassName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jCB_ClassNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jCB_ClassNameFocusLost(evt);
            }
        });

        jTF_ResultId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTF_ResultId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_ResultId.setText("result id");
        jTF_ResultId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTF_ResultIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTF_ResultIdFocusLost(evt);
            }
        });
        jTF_ResultId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_ResultIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTF_ResultId, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207)
                .addComponent(jTF_StudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCB_ClassName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_StudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB_ClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_ResultId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReloadPage() {
        searchTableModel = (DefaultTableModel) jT_ResultsData.getModel();
        searchTableModel.setRowCount(0);
        pD = new ProjectDesign();
        pD.phTextField = jTF_StudentId;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "subject id");
        pD.phTextField = jTF_ResultId;
        pD.phTextField.setText("");
        pD.placeHolder("jTextField", "FL", "result id");
        pD.phComboBox = jCB_ClassName;
        pD.phComboBox.setSelectedItem("- class name -");
        pD.placeHolder("jComboBox", "FL", "- class name -");
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void jTF_StudentIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_StudentIdFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jTF_StudentId;
        pD.placeHolder("jTextField", "FG", "subject id");
    }//GEN-LAST:event_jTF_StudentIdFocusGained

    private void jTF_StudentIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_StudentIdFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jTF_StudentId;
        pD.placeHolder("jTextField", "FL", "subject id");
    }//GEN-LAST:event_jTF_StudentIdFocusLost

    private void jTF_StudentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_StudentIdActionPerformed
        if (jTF_ResultId.getText().equals("result id") || jCB_ClassName.getSelectedItem().toString().equals("- class name -")) {
            String byComponent = jTF_StudentId.getText().toUpperCase();
            GenerateDataFromDb(byComponent);
        } else {
            JOptionPane.showMessageDialog(this, "Please Refresh Page First.");
        }
    }//GEN-LAST:event_jTF_StudentIdActionPerformed

    private void jCB_ClassNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jCB_ClassNameFocusGained
        pD = new ProjectDesign();
        pD.phComboBox = jCB_ClassName;
        pD.placeHolder("jComboBox", "FG", "- class name -");
    }//GEN-LAST:event_jCB_ClassNameFocusGained

    private void jCB_ClassNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jCB_ClassNameFocusLost
        pD = new ProjectDesign();
        pD.phComboBox = jCB_ClassName;
        pD.placeHolder("jComboBox", "FL", "- class name -");
    }//GEN-LAST:event_jCB_ClassNameFocusLost

    private void addRowFromDb() {
        searchTableModel.addRow(new Object[]{rltModel.StudentId, columnValues[row][0], columnValues[row][7],
            columnValues[row][15], columnValues[row][19], columnValues[row][20], columnValues[row][21]});
    }

    private void GenerateDataFromDb(String byComponent) {
        searchTableModel = (DefaultTableModel) jT_ResultsData.getModel();
        searchTableModel.setRowCount(0);
        try {
            rltCreate = new ResultsCreate();
            rltModel = new ResultsModel();
            int totalSubject = rltCreate.CalculateSubjectFromColumns(rltModel.GetColumnsAmount());
            columnValues = rltModel.GetClassSubjectDetails(byComponent, totalSubject, "ResultsSearch");
            for (row = 0; row < totalSubject; row++) {
                switch (row) {
                    case 0:
                        subjectName[0] = columnValues[row][0];
                        preTestTotalMark[0] = columnValues[row][7];
                        testTotalMark[0] = columnValues[row][15];
                        averageMark[0] = columnValues[row][19];
                        latterGrade[0] = columnValues[row][20];
                        GradePoint[0] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 1:
                        subjectName[1] = columnValues[row][0];
                        preTestTotalMark[1] = columnValues[row][7];
                        testTotalMark[1] = columnValues[row][15];
                        averageMark[1] = columnValues[row][19];
                        latterGrade[1] = columnValues[row][20];
                        GradePoint[1] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 2:
                        subjectName[2] = columnValues[row][0];
                        preTestTotalMark[2] = columnValues[row][7];
                        testTotalMark[2] = columnValues[row][15];
                        averageMark[2] = columnValues[row][19];
                        latterGrade[2] = columnValues[row][20];
                        GradePoint[2] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 3:
                        subjectName[3] = columnValues[row][0];
                        preTestTotalMark[3] = columnValues[row][7];
                        testTotalMark[3] = columnValues[row][15];
                        averageMark[3] = columnValues[row][19];
                        latterGrade[3] = columnValues[row][20];
                        GradePoint[3] = columnValues[row][21];
                        break;
                    case 4:
                        subjectName[4] = columnValues[row][0];
                        preTestTotalMark[4] = columnValues[row][7];
                        testTotalMark[4] = columnValues[row][15];
                        averageMark[4] = columnValues[row][19];
                        latterGrade[4] = columnValues[row][20];
                        GradePoint[4] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 5:
                        subjectName[5] = columnValues[row][0];
                        preTestTotalMark[5] = columnValues[row][7];
                        testTotalMark[5] = columnValues[row][15];
                        averageMark[5] = columnValues[row][19];
                        latterGrade[5] = columnValues[row][20];
                        GradePoint[5] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 6:
                        subjectName[6] = columnValues[row][0];
                        preTestTotalMark[6] = columnValues[row][7];
                        testTotalMark[6] = columnValues[row][15];
                        averageMark[6] = columnValues[row][19];
                        latterGrade[6] = columnValues[row][20];
                        GradePoint[6] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 7:
                        subjectName[7] = columnValues[row][0];
                        preTestTotalMark[7] = columnValues[row][7];
                        testTotalMark[7] = columnValues[row][15];
                        averageMark[7] = columnValues[row][19];
                        latterGrade[7] = columnValues[row][20];
                        GradePoint[7] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 8:
                        subjectName[8] = columnValues[row][0];
                        preTestTotalMark[8] = columnValues[row][7];
                        testTotalMark[8] = columnValues[row][15];
                        averageMark[8] = columnValues[row][19];
                        latterGrade[8] = columnValues[row][20];
                        GradePoint[8] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 9:
                        subjectName[9] = columnValues[row][0];
                        preTestTotalMark[9] = columnValues[row][7];
                        testTotalMark[9] = columnValues[row][15];
                        averageMark[9] = columnValues[row][19];
                        latterGrade[9] = columnValues[row][20];
                        GradePoint[9] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 10:
                        subjectName[10] = columnValues[row][0];
                        preTestTotalMark[10] = columnValues[row][7];
                        testTotalMark[10] = columnValues[row][15];
                        averageMark[10] = columnValues[row][19];
                        latterGrade[10] = columnValues[row][20];
                        GradePoint[10] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 11:
                        subjectName[11] = columnValues[row][0];
                        preTestTotalMark[11] = columnValues[row][7];
                        testTotalMark[11] = columnValues[row][15];
                        averageMark[11] = columnValues[row][19];
                        latterGrade[11] = columnValues[row][20];
                        GradePoint[11] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 12:
                        subjectName[12] = columnValues[row][0];
                        preTestTotalMark[12] = columnValues[row][7];
                        testTotalMark[12] = columnValues[row][15];
                        averageMark[12] = columnValues[row][19];
                        latterGrade[12] = columnValues[row][20];
                        GradePoint[12] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 13:
                        subjectName[13] = columnValues[row][0];
                        preTestTotalMark[13] = columnValues[row][7];
                        testTotalMark[13] = columnValues[row][15];
                        averageMark[13] = columnValues[row][19];
                        latterGrade[13] = columnValues[row][20];
                        GradePoint[13] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 14:
                        subjectName[14] = columnValues[row][0];
                        preTestTotalMark[14] = columnValues[row][7];
                        testTotalMark[14] = columnValues[row][15];
                        averageMark[14] = columnValues[row][19];
                        latterGrade[14] = columnValues[row][20];
                        GradePoint[14] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 15:
                        subjectName[15] = columnValues[row][0];
                        preTestTotalMark[15] = columnValues[row][7];
                        testTotalMark[15] = columnValues[row][15];
                        averageMark[15] = columnValues[row][19];
                        latterGrade[15] = columnValues[row][20];
                        GradePoint[15] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 16:
                        subjectName[16] = columnValues[row][0];
                        preTestTotalMark[16] = columnValues[row][7];
                        testTotalMark[16] = columnValues[row][15];
                        averageMark[16] = columnValues[row][19];
                        latterGrade[16] = columnValues[row][20];
                        GradePoint[16] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 17:
                        subjectName[17] = columnValues[row][0];
                        preTestTotalMark[17] = columnValues[row][7];
                        testTotalMark[17] = columnValues[row][15];
                        averageMark[17] = columnValues[row][19];
                        latterGrade[17] = columnValues[row][20];
                        GradePoint[17] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 18:
                        subjectName[18] = columnValues[row][0];
                        preTestTotalMark[18] = columnValues[row][7];
                        testTotalMark[18] = columnValues[row][15];
                        averageMark[18] = columnValues[row][19];
                        latterGrade[18] = columnValues[row][20];
                        GradePoint[18] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    case 19:
                        subjectName[19] = columnValues[row][0];
                        preTestTotalMark[19] = columnValues[row][7];
                        testTotalMark[19] = columnValues[row][15];
                        averageMark[19] = columnValues[row][19];
                        latterGrade[19] = columnValues[row][20];
                        GradePoint[19] = columnValues[row][21];
                        addRowFromDb();
                        break;
                    default:
                        break;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ResultsSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jCB_ClassNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_ClassNameItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jTF_StudentId.getText().equals("subject id") || jTF_ResultId.getText().equals("result id")) {
                String byComponent = jCB_ClassName.getSelectedItem().toString().toUpperCase();
                GenerateDataFromDb(byComponent);
            } else {
                JOptionPane.showMessageDialog(this, "Please Refresh Page First.");
            }
        }
    }//GEN-LAST:event_jCB_ClassNameItemStateChanged

    private void jTF_ResultIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_ResultIdFocusGained
        pD = new ProjectDesign();
        pD.phTextField = jTF_ResultId;
        pD.placeHolder("jTextField", "FG", "result id");
    }//GEN-LAST:event_jTF_ResultIdFocusGained

    private void jTF_ResultIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTF_ResultIdFocusLost
        pD = new ProjectDesign();
        pD.phTextField = jTF_ResultId;
        pD.placeHolder("jTextField", "FL", "result id");
    }//GEN-LAST:event_jTF_ResultIdFocusLost

    private void jTF_ResultIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_ResultIdActionPerformed
        if (jTF_StudentId.getText().equals("subject id") || jCB_ClassName.getSelectedItem().toString().equals("- class name -")) {
            String byComponent = jTF_ResultId.getText().toString().toUpperCase();
            GenerateDataFromDb(byComponent);
        } else {
            JOptionPane.showMessageDialog(this, "Please Refresh Page First.");
        }
    }//GEN-LAST:event_jTF_ResultIdActionPerformed

    private void jB_ReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_ReloadActionPerformed
        ReloadPage();
    }//GEN-LAST:event_jB_ReloadActionPerformed

    private void jB_GenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_GenerateReportActionPerformed
        String fileName = rltModel.DocumentOfResultSearchReport(rltModel.StudentId, subjectName, preTestTotalMark, testTotalMark, averageMark, latterGrade, GradePoint);
        if (Desktop.isDesktopSupported()) {
            try {
                File generateFile = new File(fileName);
                Desktop.getDesktop().open(generateFile);
            } catch (IOException ex) {
                Logger.getLogger(ResultsSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
    }//GEN-LAST:event_jB_GenerateReportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ResultsSearch().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_GenerateReport;
    private javax.swing.JButton jB_Reload;
    private javax.swing.JComboBox<String> jCB_ClassName;
    private javax.swing.JLabel jL_SchoolLogo;
    private javax.swing.JLabel jL_nameOfSchool;
    private javax.swing.JLabel jL_schoolAddress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTF_ResultId;
    private javax.swing.JTextField jTF_StudentId;
    private javax.swing.JTable jT_ResultsData;
    // End of variables declaration//GEN-END:variables
}
